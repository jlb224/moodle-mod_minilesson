{"version":3,"file":"spacegame.min.js","sources":["../src/spacegame.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Spacegame app javascript for Poodll minilesson\n *\n * @package    mod_minilesson\n * @copyright  2024 Justin Hunt (poodllsupport@gmail.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/notification', 'mod_minilesson/definitions', 'core/log', 'core/templates','core/ajax'],\n    function($, notification, def, log, templates, Ajax) {\n\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the Space Game item type.\n   */\n\n  log.debug('MiniLesson Space Game: initialising');\n\n    class Rectangle {\n        /**\n         * Constructor for storing information about a rectangle shape.\n         * @param {int} left\n         * @param {int} top\n         * @param {int} width\n         * @param {int} height\n         */\n        constructor(left, top, width, height) {\n            this.left = left || 0;\n            this.top = top || 0;\n            this.width = width || 0;\n            this.height = height || 0;\n        }\n\n        right () {\n            return this.left + this.width;\n        };\n\n        bottom() {\n            return this.top + this.height;\n        };\n\n        Contains (point) {\n            return point.x > this.left &&\n                point.x < this.right() &&\n                point.y > this.top &&\n                point.y < this.bottom();\n        };\n\n        Intersect(rectangle) {\n            var retval = !(rectangle.left > this.right() ||\n                rectangle.right() < this.left ||\n                rectangle.top > this.bottom() ||\n                rectangle.bottom() < this.top);\n            return retval;\n        };\n    }\n    class GameObject {\n        /**\n         * Generate game object.\n         * @param {text} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            if (src !== null) {\n                this.image = this.loadImage(src);\n            }\n            this.x = x;\n            this.y = y;\n            this.velocity = {x: 0, y: 0};\n            this.direction = {x: 0, y: 0};\n            this.movespeed = {x: 5, y: 3};\n            this.alive = true;\n            this.decay = 0.7;\n        }\n\n        loadImage(src) {\n            if (!this.image) {\n                this.image = new Image();\n            }\n            this.image.src = src;\n            return this.image;\n        }\n\n        update() {\n            this.velocity.x += this.direction.x * this.movespeed.x;\n            this.velocity.y += this.direction.y * this.movespeed.y;\n            this.x += this.velocity.x;\n            this.y += this.velocity.y;\n            this.velocity.y *= this.decay;\n            this.velocity.x *= this.decay;\n        };\n\n        draw (context) {\n            context.drawImage(this.image, this.x, this.y, this.image.width, this.image.height);\n        };\n\n        getRect() {\n            return new Rectangle(this.x, this.y, this.image.width, this.image.height);\n        };\n\n        die() {\n            this.alive = false;\n        };\n    }\n\n    /**\n     * Represents a player in the game, handling movement, shooting, and collision detection.\n     */\n    class Player extends GameObject {\n        /**\n         * Constructor for Player class, all the information about the player\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            super( src, x, y);\n            this.mouse = {x: 0, y: 0};\n            this.movespeed = {x: 6, y: 4};\n            this.lives = 3;\n            this.lastScore = 0;\n        }\n\n        update(bounds) {\n            if (app.mouseDown || app.touchDown) {\n                if (this.x < this.mouse.x - (this.image.width)) {\n                    app.player.direction.x = 1;\n                } else if (this.x > this.mouse.x) {\n                    app.player.direction.x = -1;\n                } else {\n                    app.player.direction.x = 0;\n                }\n                if (this.y < this.mouse.y - (this.image.height)) {\n                    app.player.direction.y = 1;\n                } else if (this.y > this.mouse.y) {\n                    app.player.direction.y = -1;\n                } else {\n                    app.player.direction.y = 0;\n                }\n            }\n            super.update(bounds);\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y < bounds.y) {\n                this.y = bounds.y;\n            } else if (this.y > bounds.height - this.image.height) {\n                this.y = bounds.height - this.image.height;\n            }\n        };\n\n        Shoot() {\n            app.playSound(\"laser\");\n            var shooter = this;\n            app.gameObjects.unshift(new Laser( app.player.x, app.player.y,shooter, true, 24));\n            app.canShoot = false;\n        }\n\n        die() {\n            super.die();\n            app.playSound(\"explosion\");\n            app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 200, \"#FFCC00\");\n            this.lastScore = app.score;\n            app.endGame();\n        }\n\n        gotShot(shot) {\n            if (shot.alive) {\n                if (this.lives <= 1) {\n                    this.die();\n                } else {\n                    this.lives--;\n                    app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 100, \"#FFCC00\");\n                }\n            }\n        }\n    }\n\n    // Represents a planet in the game, serving as a background object.\n    class Planet extends GameObject{\n        /**\n         * Constructor for Planet (background objects) extends GameObject\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y ) {\n            super(src,x,y);\n        }\n\n        update(bounds) {\n            this.image.width = app.displayRect.width;\n            this.image.height = app.displayRect.height;\n            super.update();\n        }\n\n    }\n\n    // Represents an enemy in the game. Adds enemy-specific behavior like shooting and movement patterns.\n    class Enemy extends GameObject {\n        constructor(src, x, y, text, itempoints, termid) {\n            super(src,x,y);\n            this.xspeed = app.enemySpeed;\n            this.yspeed = app.enemySpeed * (2 + Math.random()) / 4;\n            this.movespeed.x = 0;\n            this.movespeed.y = 0;\n            this.direction.y = 1;\n            this.text = text;\n            this.itempoints = itempoints;\n            this.movementClock = 0;\n            this.shotFrequency = 80;\n            this.shotClock = (1 + Math.random()) * this.shotFrequency;\n            this.level = app.level;\n            this.termid = termid;\n\n        }\n\n        update(bounds) {\n            if (this.y < bounds.height / 10 || this.y > bounds.height * 9 / 10) {\n                this.movespeed.x = this.xspeed * 1;\n                this.movespeed.y = this.yspeed * 5;\n            } else {\n                this.movespeed.x = this.xspeed;\n                this.movespeed.y = this.yspeed;\n            }\n\n            super.update(bounds);\n\n            this.movementClock--;\n            this.movementClock--;\n\n            if (this.movementClock <= 0) {\n                this.direction.x = Math.floor(Math.random() * 3) - 1;\n                this.movementClock = (2 + Math.random()) * 30;\n            }\n\n            this.shotClock -= app.enemySpeed;\n\n            if (this.shotClock <= 0) {\n                if (this.y < bounds.height * 0.6) {\n                    app.playSound(\"enemylaser\");\n                    var shooter=this;\n                    var laser = new Laser(this.x, this.y, shooter);\n                    laser.direction.y = 1;\n                    laser.friendly = false;\n                    app.gameObjects.unshift(laser);\n                    this.shotClock = (1 + Math.random()) * this.shotFrequency;\n                }\n            }\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y > bounds.height + this.image.height && this.alive) {\n                this.alive = false;\n                if (this.itempoints > 0) {\n                    app.currentPointsLeft -= this.itempoints;\n                    app.score -= 1000 * this.itempoints;\n                }\n\n                app.shipReachedEnd.call(this);\n            }\n        }\n\n        draw(context){\n\n            super.draw(context);\n            context.fillStyle = '#FFFFFF';\n            context.font = \"20px Audiowide\";\n            context.textAlign = 'center';\n\n            app.wrapText(context, this.text, true, 17, app.displayRect.width * 0.2, this.x + this.image.width / 2, this.y - 5);\n        }\n\n        die() {\n            super.die();\n            app.spray(this.x + this.image.width, this.y + this.image.height, 50 + (this.itempoints * 150), \"#FF0000\");\n\n            // Adjust Score.\n            app.score += this.itempoints * 1000;\n\n            //report the positive association\n            app.reportSuccess(this.termid);\n\n            // Kill off the ship.\n            app.playSound(\"explosion\");\n        }\n\n        gotShot(shot) {\n            // Default behaviour, to be overridden.\n            shot.die();\n            this.die();\n\n        }\n    }\n\n    // Represents a laser in the game, capable of moving across the screen and interacting with other game objects.\n    class Laser extends GameObject {\n        constructor(x, y, shooter, friendly, laserSpeed) {\n\n            super(friendly ? \"pix/spacegame/laser.png\" : \"pix/spacegame/enemylaser.png\", x, y);\n            this.x = this.x + ((shooter.image.width - this.image.width) / 2);\n            this.direction.y = -1;\n            this.friendly = friendly ? 1 : 0;\n            this.laserSpeed = laserSpeed || 12;\n        }\n\n        update(bounds) {\n            super.update(bounds);\n            if (this.x < bounds.x - this.image.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.image.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.velocity.y = this.laserSpeed * this.direction.y;\n        };\n\n        deflect() {\n            this.image = this.loadImage(\"pix/spacegame/enemylaser.png\");\n            this.direction.y *= -1;\n            this.friendly = !this.friendly;\n            app.playSound(\"deflect\");\n        };\n    }\n\n    class Particle extends GameObject {\n        constructor(x, y, velocity, colour) {\n            super(null, x, y);\n            this.width = 2;\n            this.height = 2;\n            this.velocity.x = velocity.x;\n            this.velocity.y = velocity.y;\n            this.aliveTime = 0;\n            this.colour = colour;\n            this.decay = 1;\n        }\n\n        update(bounds){\n            super.update(bounds);\n            if (this.x < bounds.x - this.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.aliveTime++;\n            if (this.aliveTime > (Math.random() * 15) + 5) {\n                this.alive = false;\n            }\n        }\n\n        getRect(){\n            return new Rectangle(this.x, this.y, this.width, this.height);\n        }\n\n        draw(context){\n            context.fillStyle = this.colour;\n            context.fillRect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n    }\n\n    // Represents a star in the background of the game, moving downwards to create a parallax effect.\n    class Star extends GameObject {\n        constructor(bounds) {\n            super( null, Math.random() * bounds.width, 0);\n            this.width = 2;\n            this.height = 2;\n            this.direction.y = 1;\n            this.movespeed.y = 0.2 + (Math.random() / 2);\n            this.aliveTime = 0;\n        }\n\n        update(bounds){\n            super.update(bounds);\n            if (this.y > bounds.height) {\n                this.alive = false;\n            }\n        }\n\n        draw(context){\n            context.fillStyle = '#9999AA';\n            context.fillRect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n    }\n\n    /**\n     * MultiEnemy extends the Enemy class to represent a more complex enemy type in the game.\n     *\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} itempoints\n     * @param {boolean} single\n     */\n    class MultiEnemy extends Enemy {\n        constructor(x, y, text, itempoints, single,termid) {\n            super(\"pix/spacegame/ship-enemy-yellow-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            this.single = single;\n        }\n\n        die() {\n            super.die();\n            if (this.itempoints > 0) {\n                app.currentPointsLeft -= this.itempoints;\n            }\n            // Store the result for later processing.\n            app.storeResult(this.termid, this.itempoints);\n            if ((this.single && this.itempoints === 1) && this.itempoints >= 1 || (this.itempoints > 0 && app.currentPointsLeft <= 0)) {\n                app.killAllAlive();\n                app.nextLevel();\n            }\n        }\n\n        gotShot(shot) {\n            if (this.itempoints > 0) {\n                shot.die();\n                this.die();\n\n                // Report the positive association.\n                app.reportSuccess(this.termid);\n\n            } else {\n                app.score += (this.itempoints - 0.5) * 600;\n\n                // Record negative association for later processing.\n                app.storeResult(this.termid, 0);\n\n                shot.deflect();\n            }\n        }\n    }\n\n    // MatchEnemy extends the Enemy class to represent enemies that can be matched/paired in the game.\n    class MatchEnemy extends Enemy {\n        constructor(x, y, text, itempoints, pairid, stem, termid  ) {\n\n            if (stem) {\n                super(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            } else {\n               // super(\"pix/spacegame/ship-enemy-purple-64.png\", x, y, text, itempoints, termid);\n                super(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            }\n            this.stem = stem ? true : false;\n            this.pairid = pairid;\n            this.shotFrequency = 160;\n            this.hightlighted = false;\n        }\n\n        die() {\n            app.currentPointsLeft -= this.itempoints;\n            // Sets the itempoints as 0 to stop it adding to the score in #die()\n            this.itempoints = 0;\n            super.die();\n\n        }\n\n        gotShot(shot) {\n            if (shot.alive && this.alive) {\n                if (app.lastShot == -this.pairid) {\n\n                    // Increasing the score here instead of in #die(), due to rounding issues being a few numbers off.\n                    // This must be done before because when #die is invoked, as it sets the itempoints as 0.\n                    app.score += this.itempoints * 1000 * 2;\n\n                    //store the result for later processing\n                    app.storeResult(this.termid, this.itempoints);\n\n                    //report the positive association\n                    app.reportSuccess(this.termid);\n\n\n                    shot.die();\n                    this.die();\n                    var alives = 0;\n                    app.currentTeam.forEach(function (match) {\n                        if (match.pairid == app.lastShot) {\n                            match.die();\n                        }\n                        if (match.alive) {\n                            alives++;\n                        }\n                    });\n\n                    if (alives <= 0) {\n                        app.nextLevel();\n                    }\n                } else {\n                    if (app.lastShot == this.pairid) {\n                        shot.deflect();\n                    } else {\n                        shot.die();\n                        this.hightlight();\n                        app.lastShot = this.pairid;\n                    }\n                }\n            }\n        }\n\n        hightlight() {\n            app.currentTeam.forEach(function (match) {\n                match.unhightlight();\n            });\n            if (this.stem) {\n                this.loadImage(\"pix/spacegame/ship-enemy-blue-\" + app.shipsize + \".png\");\n            } else {\n                this.loadImage(\"pix/spacegame/ship-enemy-blue-\" + app.shipsize + \".png\");\n            }\n            this.hightlighted = true;\n        };\n\n        unhightlight() {\n            if (this.hightlighted) {\n                if (this.stem) {\n                    this.loadImage(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\");\n                } else {\n                    this.loadImage(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\");\n                }\n            }\n            this.hightlighted = false;\n        }\n    }\n\n    // Start of app declaration.\nvar app = {\n    isFreeMode:  false,\n    termAsAlien: \"0\",\n    questions: [],\n    quizgame: null,\n    stage: null,\n    score: 0,\n    particles: [],\n    gameObjects: [],\n    shipsize: \"48\", //TO DO: make this a setting and refactor image loading to be not clunky\n    images: [\n        'pix/spacegame/icon.gif',\n        'pix/spacegame/planet.png',\n        'pix/spacegame/ship.png',\n        'pix/spacegame/ship-poodll-64.png',\n        'pix/spacegame/ship-enemy-green-64.png',\n        'pix/spacegame/ship-enemy-yellow-64.png',\n        'pix/spacegame/ship-enemy-blue-64.png',\n        'pix/spacegame/ship-poodll-48.png',\n        'pix/spacegame/ship-enemy-green-48.png',\n        'pix/spacegame/ship-enemy-yellow-48.png',\n        'pix/spacegame/ship-enemy-blue-48.png',\n        'pix/spacegame/space-bckg.png',\n        'pix/spacegame/enemy.png',\n        'pix/spacegame/enemystem.png',\n        'pix/spacegame/enemychoice.png',\n        'pix/spacegame/enemystemselected.png',\n        'pix/spacegame/enemychoiceselected.png',\n        'pix/spacegame/laser.png',\n        'pix/spacegame/enemylaser.png'\n    ],\n    imagesLoaded:  0,\n    loadedImages:[],\n    loaded: false,\n    player: null,\n    planet: null,\n    level: -1,\n    displayRect: {x: 0, y: 0, width: 0, height: 0},\n    question: \"\",\n    interval: null,\n    enemySpeed: null,\n    touchDown: false,\n    mouseDown: false,\n    currentTeam: [],\n    lastShot: 0,\n    currentPointsLeft:  0,\n    context: null,\n    inFullscreen: false,\n    canShoot: true,\n    dryRun: false,\n    ttslanguage: 'en-US',\n    distractors: [],\n    controls: {},\n    results: [],\n    timer: null,\n\n\n\n    registerSpaceGameEvents: function(){\n\n        document.onkeyup = this.keyup;\n        document.onkeydown = this.keydown;\n        document.onmouseup = this.mouseup;\n        document.onmousedown = this.mousedown;\n        document.onmousemove = this.mousemove;\n        document.ontouchstart = this.touchstart;\n        document.ontouchend = this.touchend;\n        document.addEventListener('touchmove',this.touchmove, {passive: false});\n        window.onresize = this.orientationChange;\n\n        document.addEventListener(\"gesturestart\", this.cancelled, false);\n        document.addEventListener(\"gesturechange\", this.cancelled, false);\n        document.addEventListener(\"gestureend\", this.cancelled, false);\n    }  ,\n\n    /**\n     * Play sound effect.\n     * @param {string} soundName\n     */\n    playSound: function(soundName) {\n        if (document.getElementById(\"mod_minilesson_spacegame_sound_on\").checked) {\n            var soundElement = document.getElementById(\"mod_minilesson_sound_\" + soundName);\n            soundElement.currentTime = 0;\n            soundElement.play();\n        }\n    },\n\n    /**\n     * Adjust for small screens.\n     */\n    smallscreen: function() {\n        this.inFullscreen = false;\n\n        if (document.fullscreenElement) {\n            if (document.exitFullscreen) {\n                let exitPromise = document.exitFullscreen();\n                if (exitPromise instanceof Promise) {\n                    exitPromise.then(() => console.log(\"Document Exited from Full screen mode\"))\n                               .catch((err) => console.error(err));\n                } else {\n                    console.log(\"Document Exited from Full screen mode\");\n                }\n            } else if (document.webkitExitFullscreen) { /* Safari */\n                document.webkitExitFullscreen();\n                console.log(\"Document Exited from Full screen mode (webkit)\");\n            } else if (document.msExitFullscreen) { /* IE11 */\n                document.msExitFullscreen();\n                console.log(\"Document Exited from Full screen mode (ms)\");\n            } else {\n                console.error(\"Fullscreen exit is not supported by this browser\");\n            }\n        } else {\n            console.log(\"Document is not in fullscreen mode\");\n        }\n\n        this.stage.removeAttribute(\"width\");\n        this.stage.removeAttribute(\"height\");\n        this.stage.removeAttribute(\"style\");\n\n        this.stage.classList.remove(\"floating-game-canvas\");\n        $(\"#button_container\").removeClass(\"floating-button-container fixed-bottom\");\n\n        this.displayRect.width = this.stage.clientWidth;\n        this.displayRect.height = this.stage.clientHeight;\n        this.stage.style.width = this.displayRect.width;\n        this.stage.style.height = this.displayRect.height;\n\n        this.sizeScreen(this.stage);\n    },\n\n    /**\n     * Adjust screen size (switch between modes).\n     */\n    fschange: function() {\n        if (this.inFullscreen) {\n            app.smallscreen();\n        }\n    },\n\n    /**\n     * Expand to full screen.\n     */\n    fullscreen: function() {\n        var landscape = window.matchMedia(\"(orientation: landscape)\").matches;\n        try {\n            if (this.stage.requestFullscreen) {\n                this.stage.requestFullscreen();\n            } else if (this.stage.msRequestFullscreen) {\n                this.stage.msRequestFullscreen();\n            } else if (this.stage.mozRequestFullScreen) {\n                this.stage.mozRequestFullScreen();\n            } else {\n                console.error(\"Fullscreen API is not supported by this browser\");\n            }\n        } catch (e) {\n            log.debug(e, \"Fullscreen error: \");\n        }\n        // The stage.webkitRequestFullscreen() method was removed, due to very easily exiting of full screen in iOS,\n        // along with browser messages asking if you are typing in fullscreen.\n\n        this.inFullscreen = true;\n        var buttonContainer = $(\"#button_container\");\n\n        var width = window.innerWidth;\n\n        // The window.innerHeight returns an offset value on iOS devices in safari only\n        // while in portrait mode for some reason.\n        var height = $(window).height();\n\n        // Switch width and height\n        if (landscape && width < height) {\n            height = [width, width = height][0];\n        }\n\n        // Gets the actual button container height, then adds 16px; 8px on the\n        // top and 8px on the bottom for the page margin.\n        height -= buttonContainer.height() + 16;\n\n        this.displayRect.width = width;\n        this.displayRect.height = height;\n\n        this.stage.style.width = width + \"px\";\n        this.stage.style.height = height + \"px\";\n\n        // Makes the canvas float.\n        this.stage.classList.add(\"floating-game-canvas\");\n\n        // This makes the button container float below the game canvas.\n        buttonContainer.addClass(\"floating-button-container fixed-bottom\");\n\n        $(\"#mod_minilesson_spacegame_fullscreen_button\").blur(); // The button pressed was still focused, so a blur is necessary.\n\n        this.sizeScreen(this.stage);\n    },\n\n    /**\n     * Adjust screen size based on browser window.\n     * @param {object} stage\n     */\n    sizeScreen: function(stage) {\n\n        stage.width = this.displayRect.width;\n        stage.height = this.displayRect.height;\n        this.context.imageSmoothingEnabled = false;\n    },\n\n    /**\n     * Helper function for when the screen size chages due to rotating on mobile.\n     */\n    orientationChange: function() {\n        if (app.inFullscreen) {\n            app.fullscreen();\n        } else {\n            app.smallscreen();\n        }\n    },\n\n    /**\n     * Helper function to clear all events.\n     */\n    clearEvents: function() {\n        document.onkeydown = null;\n        document.onkeyup = null;\n        document.onmousedown = null;\n        document.onmouseup = null;\n        document.onmousemove = null;\n        document.ontouchstart = null;\n        document.ontouchend = null;\n        document.ontouchmove = null;\n        window.onresize = null;\n    },\n\n    storeResult: function(termid, points){\n        var theterm = false;\n        app.definitions.terms.forEach(function(term){\n            if(term.id == termid){\n                theterm = term;\n            }\n        });\n        //if we found the term, store the result\n        if (theterm) {\n            var result = {\n                question: app.strip_html(theterm['definition']),\n                selected: '',\n                correct: theterm['term'],\n                points: points,\n                id: theterm.id\n            };\n            for (var i = 0; i < app.results.length; i++) {\n                if (app.results[i].id == theterm.id) {\n                    //if we have a duplicate and the earlier one is a fail, but this is a pass, replace it\n                    if (points > 0 && app.results[i].points == 0) {\n                        app.results.splice(i, 1);\n                    //otherwise we just keep the previous result\n                    } else {\n                        return;\n                    }\n                }\n            }\n            //storing result\n            app.results.push(result);\n        }\n    },\n\n    reportSuccess: function(termid) {\n        if (app.dryRun) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'mod_minilesson_report_successful_association',\n            args: {\n                termid: termid,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n    },\n\n    reportFailure: function(term1id, term2id) {\n        if (app.dryRun) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'mod_minilesson_report_failed_association',\n            args: {\n                term1id: term1id,\n                term2id: term2id,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n    },\n\n    /**\n     * Helper function to handle JS Events.\n     */\n    menuEvents: function() {\n        app.clearEvents();\n        document.onkeydown = app.menukeydown;\n        document.onmouseup = app.menumousedown;\n        document.ontouchend = app.menutouchend;\n        window.onresize = app.orientationChange;\n    },\n\n    /**\n     * Helper function to load game objects\n     */\n    loadGame: function() {\n\n        // We already do this elsewhere.\n        app.shuffle(app.questions);\n\n        if (!app.loaded) {\n            app.images.forEach(function (src) {\n                if (!src.includes('spacegame')) {\n                    src = src.replace('pix/spacegame/', 'pix/spacegame/');\n                }\n\n                var image = new Image();\n                image.src = src;\n                image.onload = function () {\n                    app.loadedImages[src] = image;\n                    app.imagesLoaded++;\n                    console.log(app.imagesLoaded);\n                    if (app.imagesLoaded >= app.images.length) {\n                        app.gameLoaded();\n                    }\n                };\n            });\n            app.loaded = true;\n        } else {\n            app.startGame();\n        }\n    },\n\n    /**\n     * Helper function process game-over.\n     */\n    endGame: function() {\n\n        // Clear full screen.\n        if (app.inFullscreen) {\n            log.debug(\"quitting full screen\");\n            app.inFullscreen = false;\n            app.smallscreen();\n        }\n\n        clearInterval(app.timer.interval);\n        $(\"#minilesson-gameboard, #minilesson-start-button\").hide();\n        $(\"#minilesson-results\").show();\n\n        // Template data.\n        var tdata = [];\n        tdata['nexturl'] = app.nexturl;\n        tdata['results'] = app.results;\n        tdata['total'] = app.definitions.spacegameitems.length;\n        // tdata['totalcorrect'] = a4e.calc_total_points(app.results);\n        tdata['gamescore'] = Math.round(app.score);\n        var total_time = app.timer.count;\n        // if (total_time == 0) {\n        //     tdata['prettytime'] = '00:00';\n        // } else {\n        //     tdata['prettytime'] = a4e.pretty_print_secs(total_time);\n        // }\n\n        templates.render('mod_minilesson/feedback', tdata).then(\n            function(html, js) {\n                $(\"#results-inner\").html(html);\n                // Add listeners for the \"Add to my words\" buttons.\n                require([\"mod_minilesson/mywords\"], function(mywords) {\n                    mywords.initFromFeedbackPage();\n                });\n            }\n        );\n\n        var data = {\n            results: app.results,\n            activity: \"spacegame\"\n        };\n\n        if (!app.isFreeMode) {\n            Ajax.call([{\n                methodname: 'mod_minilesson_report_step_grade',\n                args: {\n                    modid: app.modid,\n                    correct: tdata['totalcorrect']\n                }\n            }]);\n        }\n\n        // ajax.call([{\n        //     methodname: 'mod_wordcards_update_score',\n        //     args: {quizgameid: quizgame, score: Math.trunc(score)},\n        //     fail: notification.exception\n        // }]);\n\n        // We use wordcards end screen so we dont do menuevents.\n        // We just clear events so that the game doesnt restart and kill any ships left on stage\n        //this.menuEvents();\n        this.killAllAlive();\n        this.clearEvents();\n    },\n\n    /**\n     * Helper function process game ready.\n     */\n    gameLoaded: function() {\n\n        clearInterval(app.interval);\n\n        app.interval = setInterval(function () {\n            app.draw(app.context, app.displayRect, app.gameObjects, app.particles, app.question);\n            app.update(app.displayRect, app.gameObjects, app.particles);\n        }, 40);\n\n        app.startGame();\n    },\n\n    /**\n     * Helper function process game start.\n     */\n    startGame: function() {\n\n        app.score = 0;\n        app.gameObjects = [];\n        app.particles = [];\n        app.level = -1;\n        app.enemySpeed = 0.5;\n        app.touchDown = false;\n        app.mouseDown = false;\n        app.results=[];\n\n        // Queue & trigger the game_started event.\n        /*\n                ajax.call([{\n                    methodname: 'mod_wordcards_start_game',\n                    args: {quizgameid: quizgame},\n                    fail: notification.exception\n                }]);\n        */\n        app.player = new Player(\"pix/spacegame/ship-poodll-\" + app.shipsize + \".png\", 0, 0);\n        app.player.x = app.displayRect.width / 2;\n        app.player.y = app.displayRect.height / 2;\n        app.gameObjects.push(app.player);\n\n        app.planet = new Planet(\"pix/spacegame/planet.png\", 0, 0);\n        app.planet.image.width = app.displayRect.width;\n        app.planet.image.height = app.displayRect.height;\n        app.planet.direction.y = 1;\n        app.planet.movespeed.y = 0.7;\n        app.particles.push(app.planet);\n        // Set up the timer.\n        app.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n                $(\"#minilesson-time-counter\").text(app.timer.count);\n            }\n        }\n\n        app.nextLevel();\n\n        app.registerSpaceGameEvents();\n    },\n\n    /**\n     * Helper function process next level (question).\n     */\n    nextLevel: function() {\n        app.level++;\n\n        // If we've run out of questions\n        if (app.level >= app.questions.length) {\n            //kill the player and end the game\n            app.player.die();\n\n            //previously we raised the speed, but we don't want to do that anymore\n            //we might go back on it though.. so its still here\n            /*\n            app.level = 0;\n            app.enemySpeed *= 1.3;\n            app.question = app.runLevel(app.questions, app.level, app.displayRect);\n            */\n\n        } else {\n            app.question = app.runLevel(app.questions, app.level, app.displayRect);\n        }\n    },\n\n    /**\n     * Helper function process current level.\n     * @param {array} questions\n     * @param {object} level\n     * @param {object} bounds\n     * @returns {string}\n     */\n    runLevel: function(questions, level, bounds) {\n        app.currentTeam = [];\n        app.lastShot = 0;\n        app.currentPointsLeft = 0;\n\n        switch(questions[level].type){\n            case 'matching':\n                var i = 0;\n                var itempoints = 1 / (questions[level].stems.length * 2);\n                app.currentPointsLeft += 1;\n                questions[level].stems.forEach(function (stem) {\n                    i++;\n                    var question = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.question, itempoints, -i, true,stem.termid);\n                    var answer = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.answer, itempoints, i,false,stem.termid);\n                    app.currentTeam.push(question);\n                    app.currentTeam.push(answer);\n                    app.gameObjects.push(question);\n                    app.gameObjects.push(answer);\n                });\n                break;\n\n            case 'multichoice':\n                questions[level].answers.forEach(function(answer) {\n                    var enemy = new MultiEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        answer.text, answer.itempoints, questions[level].single,  questions[level].termid);\n\n                    if (answer.itempoints < 1) {\n                        app.currentTeam.push(enemy);\n                        if (answer.itempoints > 0) {\n                            app.currentPointsLeft += answer.itempoints;\n                        }\n                    }\n                    app.gameObjects.push(enemy);\n                });\n        }\n        return questions[level].question;\n    },\n\n    /**\n     * Helper function to place text on screen\n     * @param {object} context\n     * @param {object} displayRect\n     * @param {objectc} objects\n     * @param {object} particles\n     * @param {string} question\n     */\n    draw: function(context, displayRect, objects, particles, question) {\n        context.clearRect(0, 0, displayRect.width, displayRect.height);\n        //draw the background\n        app.drawSpaceBackground(context,displayRect);\n\n        //draw particles\n        var i = 0;\n        for (i = 0; i < particles.length; i++) {\n            particles[i].draw(context);\n        }\n\n        //draw objects\n        for (i = 0; i < objects.length; i++) {\n            objects[i].draw(context);\n        }\n\n        if (app.player.alive) {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'left';\n            context.fillText(M.util.get_string('score', 'mod_minilesson',\n                {\n                    \"score\": Math.round(app.score), \"lives\": app.player.lives\n                }),\n                5, displayRect.height - 20);\n            context.textAlign = 'center';\n\n            app.wrapText(context, question, false, 20, displayRect.width * 0.9, displayRect.width / 2, 20);\n        } else {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'center';\n            context.fillText(M.util.get_string('endofgame', 'mod_minilesson',\n                Math.round(app.player.lastScore)),\n                displayRect.width / 2, displayRect.height / 2);\n        }\n    },\n\n    /**\n     * Helper function main game logic: process movements and behaviours of game objects\n     * @param {object} bounds\n     * @param {object} objects\n     * @param {object} particles\n     */\n    update: function(bounds, objects, particles) {\n        var i = 0;\n        for (i = 0; i < 3; i++) {\n            particles.push(new Star(bounds));\n        }\n        for (i = 0; i < particles.length; i++) {\n            particles[i].update(bounds);\n            if (!particles[i].alive) {\n                particles.splice(i, 1);\n                i--;\n            }\n        }\n        for (i = 0; i < objects.length; i++) {\n            objects[i].update(bounds);\n            for (var j = i + 1; j < objects.length; j++) {\n                app.collide(objects[i], objects[j]);\n            }\n            if (!objects[i].alive) {\n                objects.splice(i, 1);\n                i--;\n            }\n        }\n    },\n\n    /**\n     * Helper function to remove any stray ships on level advance\n     */\n    killAllAlive: function() {\n        app.currentTeam.forEach(function (enemy) {\n            if (enemy.alive) {\n                // Make the itempoints 0 so it won't count as anything and make a new level.\n                enemy.itempoints = 0;\n                enemy.die();\n            }\n        });\n        app.currentTeam = [];\n    },\n\n    /**\n     * Helper function to handle collisions between gameobjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    collide: function(object1, object2) {\n        return object1.alive && object2.alive && (this.collideOrdered(object1, object2) || this.collideOrdered(object2, object1));\n    },\n\n    /**\n     * Helper funcction to handle collisions.\n     * @param {object} object1\n     * @param {object} object2\n     * @returns {boolean}\n     */\n    collideOrdered: function(object1, object2) {\n        if (object1 instanceof Laser && object2 instanceof Player) {\n            if (!object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                object1.die();\n                return true;\n            }\n        }\n        if (object1 instanceof Laser && object2 instanceof Enemy) {\n            if (object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                return true;\n            }\n        }\n        if (object1 instanceof Player && object2 instanceof Enemy) {\n            if (app.objectsIntersect(object1, object2)) {\n                object1.die();\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Helper function to handle intersections between GameObjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    objectsIntersect: function(object1, object2) {\n        var rect1 = object1.getRect();\n        var rect2 = object2.getRect();\n        return rect1.Intersect(rect2);\n    },\n\n    /**\n     * Helper function for spraying particle (explosion) effects\n     * @param {int} x\n     * @param {int} y\n     * @param {int} num\n     * @param {string} colour\n     */\n    spray: function(x, y, num, colour) {\n        for (var i = 0; i < num; i++) {\n            app.particles.push(new Particle(x, y, {\n                x: (Math.random() - 0.5) * 16,\n                y: ((Math.random() - 0.5) * 16) + 3\n            }, colour));\n        }\n    },\n\n    /**\n     * Helper function to display answers.\n     * @param {object} context\n     * @param {string} input\n     * @param {bool} wrapUpwards\n     * @param {int} textHeight\n     * @param {int} maxLineWidth\n     * @param {int} x\n     * @param {int} y\n     */\n    wrapText: function(context, input, wrapUpwards, textHeight, maxLineWidth, x, y) {\n        var drawLines = [];\n        var originalY = y;\n        var words = input.split(' ');\n        var line = '';\n        var maxTextWidth = 0;\n        // Loops through the words, and preprocesses each line with the correct string value and y location.\n        words.forEach(function (word) {\n            var tempLine ='';\n            if(line===''){\n                tempLine = line + ' ' + word;\n            }else{\n                tempLine = line + ' ' + word;\n            }\n\n            var metrics = context.measureText(tempLine);\n            var textWidth = metrics.width;\n            maxTextWidth = Math.max(maxTextWidth, textWidth);\n\n            // If the line with the new word is too long, then push the current line without the new word to drawLines.\n            if (textWidth > maxLineWidth) {\n                drawLines.push({\n                    text: line,\n                    y: y += textHeight\n                });\n\n                line = word;\n            } else {\n                // If it's shorter than the limit, just add the word to the line and move on.\n                line = tempLine;\n            }\n        });\n\n        // Push the last line, if it exists.\n        drawLines.push({\n            text: line,\n            y: y += textHeight\n        });\n\n        // The offset the text was created.\n        var yOffset = y - originalY;\n\n        //box mods\n        var boxPadding = 20;\n        var boxmodifier = wrapUpwards ? -(yOffset + textHeight + boxPadding / 2) : -(textHeight + boxPadding / 2);\n\n        var borderColor = wrapUpwards ?'transparent':'white';\n        app.drawRoundRect(context, borderColor,maxTextWidth + boxPadding, textHeight * drawLines.length + boxPadding, x - (maxTextWidth + boxPadding) / 2, y + boxmodifier);\n\n        context.fillStyle=\"white\";\n        drawLines.forEach(function (drawLine) {\n            // If it is suppose to wrap upwards (i.e. for enemy ships) it shifts all questions upwards the amount the\n            // questions go down.\n            var modifier = wrapUpwards ? -yOffset : 0;\n\n            context.fillText(drawLine.text, x, drawLine.y + modifier);\n        });\n    },\n\n    drawRoundRect: function(context, borderColor, width, height , x , y) {\n        var cornerRadius = 4;\n        var borderWidth = 4;\n\n        var fillColor = 'rgba(75, 71, 77, 0.5)';\n        //var borderColor = 'red';\n        if(borderColor !== 'white') {\n                borderColor = fillColor;\n        }\n\n        // Draw the box with border\n        context.fillStyle = fillColor; // Box background color\n        context.fillRect(x,y, width, height); // Draw the box\n        context.strokeStyle = borderColor; // Border color\n        context.lineWidth = borderWidth; // Border width\n        context.strokeRect(x - borderWidth / 2, y - borderWidth  / 2, width + borderWidth, height + borderWidth); // Draw the border\n    },\n\n    drawSpaceBackground: function(context,displayRect) {\n\n        // Set the source of the image (URL of the background image)\n        var img = app.loadedImages['pix/spacegame/space-bckg.png'];\n\n        // Calculate the number of tiles needed to cover the canvas\n        var tilesX = Math.ceil(displayRect.width / img.width);\n        var tilesY = Math.ceil(displayRect.height / img.height);\n\n        // Loop through and draw the image tiles to cover the canvas\n        for (var i = 0; i < tilesX; i++) {\n            for (var j = 0; j < tilesY; j++) {\n                context.drawImage(img, i * img.width, j * img.height, img.width, img.height);\n            }\n        }\n    },\n\n    /**\n     * Helper function for end of level.\n     */\n    shipReachedEnd: function() {\n\n        var amountLeft = app.currentTeam.filter(function (enemy) {\n            return enemy.alive;\n        }).length;\n\n        if (amountLeft === 0\n            // && (app.currentPointsLeft < app.itempoints || app.currentPointsLeft <= 0)\n            && app.player.alive) {\n            app.nextLevel();\n        }\n    },\n\n    /**\n     * Helper function for game menu from keyboard.\n     * @param {object} e\n     */\n    menukeydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32) {\n                app.loadGame();\n            }\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menumousedown: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menutouchend: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32 && app.player.alive && app.canShoot) {\n                app.player.Shoot();\n            } else if (e.keyCode === 37) {\n                app.player.direction.x = -1;\n            } else if (e.keyCode === 38) {\n                app.player.direction.y = -1;\n            } else if (e.keyCode === 39) {\n                app.player.direction.x = 1;\n            } else if (e.keyCode === 40) {\n                app.player.direction.y = 1;\n            }\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keyup: function(e) {\n        if (e.keyCode === 32) {\n            app.canShoot = true;\n        } else if ([37, 39].indexOf(e.keyCode) !== -1) {\n            app.player.direction.x = 0;\n        } else if ([38, 40].indexOf(e.keyCode) !== -1) {\n            app.player.direction.y = 0;\n        }\n    },\n\n    /**\n     * Helper function for mouse click (starts the player shooting if you clicked on them, moving if you didn't).\n     * @param {object} e\n     */\n    mousedown: function(e) {\n        if (e.target === app.stage) {\n            var playerWasClicked = app.player.getRect().Contains({x: e.offsetX, y: e.offsetY});\n            if (playerWasClicked && app.player.alive) {\n                app.player.Shoot();\n            }\n            if (!app.mouseDown) {\n                app.player.mouse.x = e.offsetX;\n                app.player.mouse.y = e.offsetY;\n                app.mouseDown = true;\n            }\n        }\n    },\n\n    /**\n     * Helper function for mouse release. (stops the Player) for mouse mode\n     */\n    mouseup: function() {\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n        app.mouseDown = false;\n    },\n\n    /**\n     * Helper function for mouse movement.\n     * @param {object} e\n     */\n    mousemove: function(e) {\n        app.player.mouse.x = e.offsetX;\n        app.player.mouse.y = e.offsetY;\n    },\n\n    /**\n     * Helper function for cancelled event.\n     * @param {object} event\n     */\n    cancelled: function(event) {\n        if (event.target === app.stage) {\n            event.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchstart: function(e) {\n        if (e.target === app.stage) {\n            if (app.player.alive && e.touches.length > 1) {\n                app.player.Shoot();\n            } else {\n                app.touchDown = true;\n                app.touchmove(e);\n            }\n\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchend: function(e) {\n        if (e.touches.length === 0) {\n            app.touchDown = false;\n        }\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchmove: function(e) {\n        var rect = e.target.getBoundingClientRect();\n        // Required for getting the stage's relative touch position, due to a previous significant offset.\n        var x = e.touches[0].pageX - rect.left;\n        var y = e.touches[0].clientY - rect.top;\n\n        window.stage = app.stage;\n        app.player.mouse.x = x;\n        app.player.mouse.y = y - (2 * app.player.image.height);\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function to shuffle levels.\n     * @param {array} array\n     * @return {array}\n     */\n    shuffle: function(array) {\n        var currentIndex = array.length;\n        var temporaryValue;\n        var randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    },\n\n    strip_html: function(htmlstring) {\n        return htmlstring.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    },\n\n    clone: function () {\n        return $.extend(true, {}, this);\n    },\n\n    split_array: function(array, chunkSize) {\n        if(chunkSize == null){ chunkSize = 4};\n        var result = [];\n        var currentIndex = 0;\n\n        while (currentIndex < array.length) {\n            const chunk = array.slice(currentIndex, currentIndex + chunkSize);\n            if (chunk.length < chunkSize) {\n                const remaining = chunkSize - chunk.length;\n                // Reuse elements from previous chunks\n                for (var i = 0; i < remaining; i++) {\n                    chunk.push(array[i]);\n                }\n            }\n            result.push(chunk);\n            currentIndex += chunkSize;\n        }\n\n        return result;\n    },\n\n    shuffle_array: function(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    },\n\n    process: function(definitions) {\n        var terms = definitions.spacegameitems.map(function(item) {\n            return JSON.parse(item);\n        });\n        app.shuffle_array(terms);\n\n        // Multichoice questions.\n        // Split into groups(ie \"levels\") of 5 terms (a single of mc of more than 5 terms is too much).\n        var chunkSize = 5;\n        if(terms.length) {chunkSize = terms.length;}\n        var mc_levels = app.split_array(terms, chunkSize);\n        // For each level build a set of chunksize questions with 1 correct and chunksize -1  distractors.\n        for (var thelevel = 0; thelevel < mc_levels.length; thelevel++) {\n            var level = mc_levels[thelevel];\n            // Multiple choice questions.\n            for (var i = 0; i < level.length; i++) {\n                var answers = [];\n                for (var j = 0; j < level.length; j++) {\n                    var answertext = app.strip_html(level[j].definition);\n\n                    if(app.sgoptions === app.termAsAlien){\n                        answertext = level[j].term;\n                    }\n                    answers.push({\"text\": answertext,\"itempoints\": (i === j ? 1 : 0)});\n                }\n                var questiontext = level[i].term;\n                if(app.sgoptions === app.termAsAlien){\n                    questiontext = app.strip_html(level[i].definition);\n                }\n                app.questions.push({\n                    \"question\": questiontext,\n                    \"termid\": level[i].id,\n                    \"answers\": answers,\n                    \"type\": \"multichoice\",\n                    \"single\": true\n                });\n            }\n        }\n\n        // Matching questions.\n        // Split into groups(ie \"levels\") of 3 terms (even 4 terms = 8 items to shoot, its quite hard).\n        chunkSize=3;\n        var matching_levels = app.split_array(terms, chunkSize);\n        for (var thelevel = 0; thelevel < matching_levels.length; thelevel++) {\n            var level = matching_levels[thelevel];\n            var subquestions = [];\n            for (var i = 0; i < level.length; i++) {\n                subquestions.push({question: level[i].term, answer: app.strip_html(level[i].definition),\"termid\": level[i].id});\n            }\n            // Show a --- in place of a real question, so the user knows its a matching question.\n            app.questions.push({\"question\": M.util.get_string('shootthepairs', 'mod_minilesson'), \"stems\": subquestions, \"type\": \"matching\"});\n        }\n        console.log(\"After process:\", app.questions);\n    },\n\n    init_controls: function() {\n        app.controls.vocab_list = $(\"#minilesson-vocab-list\");\n        app.controls.gameboard = $(\"#minilesson-gameboard\");\n        app.controls.time_counter = $(\"#minilesson-time-counter\");\n    },\n\n    /**\n     * Helper function to display game start screen\n     */\n    showMenu: function() {\n\n        app.context.clearRect(0, 0, app.displayRect.width, app.displayRect.height);\n\n        app.context.fillStyle = '#FFFFFF';\n        app.context.font = \"18px Audiowide\";\n        app.context.textAlign = 'center';\n\n        log.debug('Display screen: initialising');\n\n        if (app.questions !== null && app.questions.length > 0) {\n            app.context.fillText(M.util.get_string('spacetostart', 'mod_minilesson'), app.displayRect.width / 2, app.displayRect.height / 2);\n            app.menuEvents();\n        } else {\n            app.context.fillText(M.util.get_string('emptyquiz', 'mod_minilesson'), app.displayRect.width / 2, app.displayRect.height / 2);\n        }\n    },\n\n    start: function() {\n        // Hide the intro screen with word cards.\n        app.results = [];\n        app.controls.vocab_list.hide();\n        app.controls.gameboard.show();\n        app.controls.time_counter.text(\"00:00\");\n\n        app.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n                app.controls.time_counter.text('zerozero');\n            }\n        }\n\n        // Begin the game screen.\n        if (document.addEventListener) {\n            document.addEventListener('fullscreenchange', app.fschange, false);\n            document.addEventListener('MSFullscreenChange', app.fschange, false);\n            document.addEventListener('mozfullscreenchange', app.fschange, false);\n            document.addEventListener('webkitfullscreenchange', app.fschange, false);\n        }\n        app.stage = document.getElementById(\"mod_minilesson_spacegame\");\n        app.context = app.stage.getContext(\"2d\");\n        app.smallscreen();\n        app.interval = setInterval(function () {\n            if (app.questions && app.questions.length > 0) {\n                app.showMenu();\n            } else {\n                console.log(\"Questions are not ready or empty.\");\n            }\n        }, 500);\n\n        // Full screen toggle button handler.\n        $('#mod_minilesson_spacegame_fullscreen_button').on('click', function () {\n            if (app.inFullscreen) {\n                app.inFullscreen = false;\n                app.smallscreen();\n            } else {\n                app.fullscreen();\n            }\n        });\n    },\n\n    next_question: function(percent) {\n        var self = this;\n        var stepdata = {};\n        stepdata.index = self.index;\n        stepdata.hasgrade = true;\n        stepdata.totalitems = 1;\n        stepdata.correctitems = percent>0?1:0;\n        stepdata.grade = percent;\n        self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n        app.index = index;\n        app.quizhelper = quizhelper;\n        var nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n        var clickbutton = $(\"#\" + itemdata.uniqueid + \"_container .ml_sg_clickclick\");\n\n        nextbutton.on('click', function(e) {\n            app.next_question(0);\n        });\n\n        clickbutton.on('click', function(e) {\n            app.start();\n            // app.next_question(100);\n        });\n\n        $('body').on('click', \"#minilesson-try-again\", function() {\n            location.reload();\n        });\n\n        $('body').on('click', \"#minilesson-close-results\", function() {\n            var total_time = app.timer.count;\n            var url = app.nexturl.replace(/&amp;/g, '&') + \"&localscattertime=\" + total_time\n            window.location.replace(url);\n        });\n    },\n\n    /**\n     * Initialization of the game.\n     * @param {array} props\n     */\n    init: function(index, itemdata, quizhelper) {\n        log.debug('MiniLesson Space Game: init function');\n\n        var definitions = itemdata;\n        app.definitions = definitions;\n        app.register_events(index, itemdata, quizhelper);\n        app.init_controls();\n        app.process(definitions);\n    },\n}; // End of app declaration.\n\n    return app;\n});"],"names":["define","$","notification","def","log","templates","Ajax","debug","Rectangle","constructor","left","top","width","height","right","this","bottom","Contains","point","x","y","Intersect","rectangle","GameObject","src","image","loadImage","velocity","direction","movespeed","alive","decay","Image","update","draw","context","drawImage","getRect","die","Player","mouse","lives","lastScore","bounds","app","mouseDown","touchDown","player","Shoot","playSound","gameObjects","unshift","Laser","canShoot","spray","score","endGame","gotShot","shot","Planet","displayRect","Enemy","text","itempoints","termid","xspeed","enemySpeed","yspeed","Math","random","movementClock","shotFrequency","shotClock","level","floor","laser","friendly","currentPointsLeft","shipReachedEnd","call","fillStyle","font","textAlign","wrapText","reportSuccess","shooter","laserSpeed","deflect","Particle","colour","aliveTime","fillRect","stroke","Star","MultiEnemy","single","shipsize","storeResult","killAllAlive","nextLevel","MatchEnemy","pairid","stem","hightlighted","lastShot","alives","currentTeam","forEach","match","hightlight","unhightlight","isFreeMode","termAsAlien","questions","quizgame","stage","particles","images","imagesLoaded","loadedImages","loaded","planet","question","interval","inFullscreen","dryRun","ttslanguage","distractors","controls","results","timer","registerSpaceGameEvents","document","onkeyup","keyup","onkeydown","keydown","onmouseup","mouseup","onmousedown","mousedown","onmousemove","mousemove","ontouchstart","touchstart","ontouchend","touchend","addEventListener","touchmove","passive","window","onresize","orientationChange","cancelled","soundName","getElementById","checked","soundElement","currentTime","play","smallscreen","fullscreenElement","exitFullscreen","exitPromise","Promise","then","console","catch","err","error","webkitExitFullscreen","msExitFullscreen","removeAttribute","classList","remove","removeClass","clientWidth","clientHeight","style","sizeScreen","fschange","fullscreen","landscape","matchMedia","matches","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","e","buttonContainer","innerWidth","add","addClass","blur","imageSmoothingEnabled","clearEvents","ontouchmove","points","theterm","definitions","terms","term","id","result","strip_html","selected","correct","i","length","splice","push","methodname","args","isfreemode","reportFailure","term1id","term2id","menuEvents","menukeydown","menumousedown","menutouchend","loadGame","shuffle","startGame","includes","replace","onload","gameLoaded","clearInterval","hide","show","tdata","nexturl","spacegameitems","round","count","render","html","js","require","mywords","initFromFeedbackPage","modid","setInterval","runLevel","type","stems","answer","answers","enemy","objects","clearRect","drawSpaceBackground","fillText","M","util","get_string","j","collide","object1","object2","collideOrdered","objectsIntersect","rect1","rect2","num","input","wrapUpwards","textHeight","maxLineWidth","drawLines","originalY","words","split","line","maxTextWidth","word","tempLine","textWidth","measureText","max","yOffset","boxmodifier","boxPadding","borderColor","drawRoundRect","drawLine","modifier","strokeStyle","lineWidth","strokeRect","borderWidth","img","tilesX","ceil","tilesY","filter","indexOf","keyCode","preventDefault","target","offsetX","offsetY","event","touches","rect","getBoundingClientRect","pageX","clientY","array","temporaryValue","randomIndex","currentIndex","htmlstring","clone","extend","split_array","chunkSize","chunk","slice","remaining","shuffle_array","process","map","item","JSON","parse","mc_levels","thelevel","answertext","definition","sgoptions","questiontext","matching_levels","subquestions","init_controls","vocab_list","gameboard","time_counter","showMenu","start","getContext","on","next_question","percent","stepdata","index","hasgrade","totalitems","correctitems","grade","quizhelper","do_next","register_events","itemdata","nextbutton","uniqueid","clickbutton","location","reload","total_time","url","init"],"mappings":"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"}