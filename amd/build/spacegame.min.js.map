{"version":3,"file":"spacegame.min.js","sources":["../src/spacegame.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Spacegame app javascript for Poodll minilesson\n *\n * @package    mod_minilesson\n * @copyright  2024 Justin Hunt (poodllsupport@gmail.com)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/notification', 'mod_minilesson/definitions', 'core/log', 'core/templates', 'core/ajax', 'core/str'],\n    function($, notification, def, log, templates, Ajax, str) {\n\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the Space Game item type.\n   */\n\n  log.debug('MiniLesson Space Game: initialising');\n\n    class Rectangle {\n        /**\n         * Constructor for storing information about a rectangle shape.\n         * @param {int} left\n         * @param {int} top\n         * @param {int} width\n         * @param {int} height\n         */\n        constructor(left, top, width, height) {\n            this.left = left || 0;\n            this.top = top || 0;\n            this.width = width || 0;\n            this.height = height || 0;\n        }\n\n        right () {\n            return this.left + this.width;\n        };\n\n        bottom() {\n            return this.top + this.height;\n        };\n\n        Contains (point) {\n            return point.x > this.left &&\n                point.x < this.right() &&\n                point.y > this.top &&\n                point.y < this.bottom();\n        };\n\n        Intersect(rectangle) {\n            var retval = !(rectangle.left > this.right() ||\n                rectangle.right() < this.left ||\n                rectangle.top > this.bottom() ||\n                rectangle.bottom() < this.top);\n            return retval;\n        };\n    }\n    class GameObject {\n        /**\n         * Generate game object.\n         * @param {text} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            if (src !== null) {\n                this.image = this.loadImage(src);\n            }\n            this.x = x;\n            this.y = y;\n            this.velocity = {x: 0, y: 0};\n            this.direction = {x: 0, y: 0};\n            this.movespeed = {x: 5, y: 3};\n            this.alive = true;\n            this.decay = 0.7;\n        }\n\n        loadImage(src) {\n            if (!this.image) {\n                this.image= app.loadedImages[src];\n            }if (!this.image) {\n                this.image = new Image();\n                this.image.src = M.cfg.wwwroot +'/mod/minilesson/' + src;\n            }\n           // this.image.src = src;\n            return this.image;\n        }\n\n        update() {\n            this.velocity.x += this.direction.x * this.movespeed.x;\n            this.velocity.y += this.direction.y * this.movespeed.y;\n            this.x += this.velocity.x;\n            this.y += this.velocity.y;\n            this.velocity.y *= this.decay;\n            this.velocity.x *= this.decay;\n        };\n\n        draw (context) {\n            context.drawImage(this.image, this.x, this.y, this.image.width, this.image.height);\n        };\n\n        getRect() {\n            return new Rectangle(this.x, this.y, this.image.width, this.image.height);\n        };\n\n        die() {\n            this.alive = false;\n        };\n    }\n\n    /**\n     * Represents a player in the game, handling movement, shooting, and collision detection.\n     */\n    class Player extends GameObject {\n        /**\n         * Constructor for Player class, all the information about the player\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y) {\n            super( src, x, y);\n            this.mouse = {x: 0, y: 0};\n            this.movespeed = {x: 6, y: 4};\n            this.lives = 3;\n            this.lastScore = 0;\n        }\n\n        update(bounds) {\n            if (app.mouseDown || app.touchDown) {\n                if (this.x < this.mouse.x - (this.image.width)) {\n                    app.player.direction.x = 1;\n                } else if (this.x > this.mouse.x) {\n                    app.player.direction.x = -1;\n                } else {\n                    app.player.direction.x = 0;\n                }\n                if (this.y < this.mouse.y - (this.image.height)) {\n                    app.player.direction.y = 1;\n                } else if (this.y > this.mouse.y) {\n                    app.player.direction.y = -1;\n                } else {\n                    app.player.direction.y = 0;\n                }\n            }\n            super.update(bounds);\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y < bounds.y) {\n                this.y = bounds.y;\n            } else if (this.y > bounds.height - this.image.height) {\n                this.y = bounds.height - this.image.height;\n            }\n        };\n\n        Shoot() {\n            app.playSound(\"laser\");\n            var shooter = this;\n            app.gameObjects.unshift(new Laser( app.player.x, app.player.y,shooter, true, 24));\n            app.canShoot = false;\n        }\n\n        die() {\n            super.die();\n            app.playSound(\"explosion\");\n            app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 200, \"#FFCC00\");\n            this.lastScore = app.score;\n            app.endGame();\n        }\n\n        gotShot(shot) {\n            if (shot.alive) {\n                if (this.lives <= 1) {\n                    this.die();\n                } else {\n                    this.lives--;\n                    app.spray(this.x + this.image.width / 2, this.y + this.image.height / 2, 100, \"#FFCC00\");\n                }\n            }\n        }\n    }\n\n    // Represents a planet in the game, serving as a background object.\n    class Planet extends GameObject{\n        /**\n         * Constructor for Planet (background objects) extends GameObject\n         * @param {string} src\n         * @param {int} x\n         * @param {int} y\n         */\n        constructor(src, x, y ) {\n            super(src,x,y);\n        }\n\n        update(bounds) {\n            this.image.width = app.displayRect.width;\n            this.image.height = app.displayRect.height;\n            super.update();\n        }\n\n    }\n\n    // Represents an enemy in the game. Adds enemy-specific behavior like shooting and movement patterns.\n    class Enemy extends GameObject {\n        constructor(src, x, y, text, itempoints, termid) {\n            super(src,x,y);\n            this.xspeed = app.enemySpeed;\n            this.yspeed = app.enemySpeed * (2 + Math.random()) / 4;\n            this.movespeed.x = 0;\n            this.movespeed.y = 0;\n            this.direction.y = 1;\n            this.text = text;\n            this.itempoints = itempoints;\n            this.movementClock = 0;\n            this.shotFrequency = 80;\n            this.shotClock = (1 + Math.random()) * this.shotFrequency;\n            this.level = app.level;\n            this.termid = termid;\n\n        }\n\n        update(bounds) {\n            if (this.y < bounds.height / 10 || this.y > bounds.height * 9 / 10) {\n                this.movespeed.x = this.xspeed * 1;\n                this.movespeed.y = this.yspeed * 5;\n            } else {\n                this.movespeed.x = this.xspeed;\n                this.movespeed.y = this.yspeed;\n            }\n\n            super.update(bounds);\n\n            this.movementClock--;\n            this.movementClock--;\n\n            if (this.movementClock <= 0) {\n                this.direction.x = Math.floor(Math.random() * 3) - 1;\n                this.movementClock = (2 + Math.random()) * 30;\n            }\n\n            this.shotClock -= app.enemySpeed;\n\n            if (this.shotClock <= 0) {\n                if (this.y < bounds.height * 0.6) {\n                    app.playSound(\"enemylaser\");\n                    var shooter=this;\n                    var laser = new Laser(this.x, this.y, shooter);\n                    laser.direction.y = 1;\n                    laser.friendly = false;\n                    app.gameObjects.unshift(laser);\n                    this.shotClock = (1 + Math.random()) * this.shotFrequency;\n                }\n            }\n\n            if (this.x < bounds.x - this.image.width) {\n                this.x = bounds.width;\n            } else if (this.x > bounds.width) {\n                this.x = bounds.x - this.image.width;\n            }\n            if (this.y > bounds.height + this.image.height && this.alive) {\n                this.alive = false;\n                if (this.itempoints > 0) {\n                    app.currentPointsLeft -= this.itempoints;\n                    app.score -= 1000 * this.itempoints;\n                }\n\n                app.shipReachedEnd.call(this);\n            }\n        }\n\n        draw(context){\n\n            super.draw(context);\n            context.fillStyle = '#FFFFFF';\n            context.font = \"20px Audiowide\";\n            context.textAlign = 'center';\n\n            app.wrapText(context, this.text, true, 17, app.displayRect.width * 0.2, this.x + this.image.width / 2, this.y - 5);\n        }\n\n        die() {\n            super.die();\n            app.spray(this.x + this.image.width, this.y + this.image.height, 50 + (this.itempoints * 150), \"#FF0000\");\n\n            // Adjust Score.\n            app.score += this.itempoints * 1000;\n\n            //report the positive association\n            app.reportSuccess(this.termid);\n\n            // Kill off the ship.\n            app.playSound(\"explosion\");\n        }\n\n        gotShot(shot) {\n            // Default behaviour, to be overridden.\n            shot.die();\n            this.die();\n\n        }\n    }\n\n    // Represents a laser in the game, capable of moving across the screen and interacting with other game objects.\n    class Laser extends GameObject {\n        constructor(x, y, shooter, friendly, laserSpeed) {\n\n            super(friendly ? \"pix/spacegame/laser.png\" : \"pix/spacegame/enemylaser.png\", x, y);\n            this.x = this.x + ((shooter.image.width - this.image.width) / 2);\n            this.direction.y = -1;\n            this.friendly = friendly ? 1 : 0;\n            this.laserSpeed = laserSpeed || 12;\n        }\n\n        update(bounds) {\n            super.update(bounds);\n            if (this.x < bounds.x - this.image.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.image.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.velocity.y = this.laserSpeed * this.direction.y;\n        };\n\n        deflect() {\n            this.image = this.loadImage(\"pix/spacegame/enemylaser.png\");\n            this.direction.y *= -1;\n            this.friendly = !this.friendly;\n            app.playSound(\"deflect\");\n        };\n    }\n\n    class Particle extends GameObject {\n        constructor(x, y, velocity, colour) {\n            super(null, x, y);\n            this.width = 2;\n            this.height = 2;\n            this.velocity.x = velocity.x;\n            this.velocity.y = velocity.y;\n            this.aliveTime = 0;\n            this.colour = colour;\n            this.decay = 1;\n        }\n\n        update(bounds){\n            super.update(bounds);\n            if (this.x < bounds.x - this.width ||\n                this.x > bounds.width ||\n                this.y < bounds.y - this.height ||\n                this.y > bounds.height) {\n                this.alive = false;\n            }\n            this.aliveTime++;\n            if (this.aliveTime > (Math.random() * 15) + 5) {\n                this.alive = false;\n            }\n        }\n\n        getRect(){\n            return new Rectangle(this.x, this.y, this.width, this.height);\n        }\n\n        draw(context){\n            context.fillStyle = this.colour;\n            context.fillRect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n    }\n\n    // Represents a star in the background of the game, moving downwards to create a parallax effect.\n    class Star extends GameObject {\n        constructor(bounds) {\n            super( null, Math.random() * bounds.width, 0);\n            this.width = 2;\n            this.height = 2;\n            this.direction.y = 1;\n            this.movespeed.y = 0.2 + (Math.random() / 2);\n            this.aliveTime = 0;\n        }\n\n        update(bounds){\n            super.update(bounds);\n            if (this.y > bounds.height) {\n                this.alive = false;\n            }\n        }\n\n        draw(context){\n            context.fillStyle = '#9999AA';\n            context.fillRect(this.x, this.y, this.width, this.height);\n            context.stroke();\n        }\n    }\n\n    /**\n     * MultiEnemy extends the Enemy class to represent a more complex enemy type in the game.\n     *\n     * @param {int} x\n     * @param {int} y\n     * @param {string} text\n     * @param {float} itempoints\n     * @param {boolean} single\n     */\n    class MultiEnemy extends Enemy {\n        constructor(x, y, text, itempoints, single,termid) {\n            super(\"pix/spacegame/ship-enemy-yellow-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            this.single = single;\n        }\n\n        die() {\n            super.die();\n            if (this.itempoints > 0) {\n                app.currentPointsLeft -= this.itempoints;\n            }\n            // Store the result for later processing.\n            app.storeResult(this.termid, this.itempoints);\n            if ((this.single && this.itempoints === 1) && this.itempoints >= 1 || (this.itempoints > 0 && app.currentPointsLeft <= 0)) {\n                app.killAllAlive();\n                app.nextLevel();\n            }\n        }\n\n        gotShot(shot) {\n            if (this.itempoints > 0) {\n                shot.die();\n                this.die();\n\n                // Report the positive association.\n                app.reportSuccess(this.termid);\n\n            } else {\n                app.score += (this.itempoints - 0.5) * 600;\n\n                // Record negative association for later processing.\n                app.storeResult(this.termid, 0);\n\n                shot.deflect();\n            }\n        }\n    }\n\n    // MatchEnemy extends the Enemy class to represent enemies that can be matched/paired in the game.\n    class MatchEnemy extends Enemy {\n        constructor(x, y, text, itempoints, pairid, stem, termid  ) {\n\n            if (stem) {\n                super(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            } else {\n               // super(\"pix/spacegame/ship-enemy-purple-64.png\", x, y, text, itempoints, termid);\n                super(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\", x, y, text, itempoints, termid);\n            }\n            this.stem = stem ? true : false;\n            this.pairid = pairid;\n            this.shotFrequency = 160;\n            this.hightlighted = false;\n        }\n\n        die() {\n            app.currentPointsLeft -= this.itempoints;\n            // Sets the itempoints as 0 to stop it adding to the score in #die()\n            this.itempoints = 0;\n            super.die();\n\n        }\n\n        gotShot(shot) {\n            if (shot.alive && this.alive) {\n                if (app.lastShot == -this.pairid) {\n\n                    // Increasing the score here instead of in #die(), due to rounding issues being a few numbers off.\n                    // This must be done before because when #die is invoked, as it sets the itempoints as 0.\n                    app.score += this.itempoints * 1000 * 2;\n\n                    //store the result for later processing\n                    app.storeResult(this.termid, this.itempoints);\n\n                    //report the positive association\n                    app.reportSuccess(this.termid);\n\n\n                    shot.die();\n                    this.die();\n                    var alives = 0;\n                    app.currentTeam.forEach(function (match) {\n                        if (match.pairid == app.lastShot) {\n                            match.die();\n                        }\n                        if (match.alive) {\n                            alives++;\n                        }\n                    });\n\n                    if (alives <= 0) {\n                        app.nextLevel();\n                    }\n                } else {\n                    if (app.lastShot == this.pairid) {\n                        shot.deflect();\n                    } else {\n                        shot.die();\n                        this.hightlight();\n                        app.lastShot = this.pairid;\n                    }\n                }\n            }\n        }\n\n        hightlight() {\n            app.currentTeam.forEach(function (match) {\n                match.unhightlight();\n            });\n            if (this.stem) {\n                this.loadImage(\"pix/spacegame/ship-enemy-blue-\" + app.shipsize + \".png\");\n            } else {\n                this.loadImage(\"pix/spacegame/ship-enemy-blue-\" + app.shipsize + \".png\");\n            }\n            this.hightlighted = true;\n        };\n\n        unhightlight() {\n            if (this.hightlighted) {\n                if (this.stem) {\n                    this.loadImage(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\");\n                } else {\n                    this.loadImage(\"pix/spacegame/ship-enemy-green-\" + app.shipsize + \".png\");\n                }\n            }\n            this.hightlighted = false;\n        }\n    }\n\n    // Start of app declaration.\nvar app = {\n    isFreeMode:  false,\n    strings: {\"shootthepairs\": \"Shoot the Pairs\"},\n    termAsAlien: \"0\",\n    questions: [],\n    quizgame: null,\n    stage: null,\n    score: 0,\n    particles: [],\n    gameObjects: [],\n    shipsize: \"48\", //TO DO: make this a setting and refactor image loading to be not clunky\n    images: [\n        'pix/spacegame/icon.gif',\n        'pix/spacegame/planet.png',\n        'pix/spacegame/ship.png',\n        'pix/spacegame/ship-poodll-64.png',\n        'pix/spacegame/ship-enemy-green-64.png',\n        'pix/spacegame/ship-enemy-yellow-64.png',\n        'pix/spacegame/ship-enemy-blue-64.png',\n        'pix/spacegame/ship-poodll-48.png',\n        'pix/spacegame/ship-enemy-green-48.png',\n        'pix/spacegame/ship-enemy-yellow-48.png',\n        'pix/spacegame/ship-enemy-blue-48.png',\n        'pix/spacegame/space-bckg.png',\n        'pix/spacegame/enemy.png',\n        'pix/spacegame/enemystem.png',\n        'pix/spacegame/enemychoice.png',\n        'pix/spacegame/enemystemselected.png',\n        'pix/spacegame/enemychoiceselected.png',\n        'pix/spacegame/laser.png',\n        'pix/spacegame/enemylaser.png'\n    ],\n    imagesLoaded:  0,\n    loadedImages:[],\n    loaded: false,\n    player: null,\n    planet: null,\n    level: -1,\n    displayRect: {x: 0, y: 0, width: 0, height: 0},\n    question: \"\",\n    interval: null,\n    enemySpeed: null,\n    touchDown: false,\n    mouseDown: false,\n    currentTeam: [],\n    lastShot: 0,\n    currentPointsLeft:  0,\n    context: null,\n    inFullscreen: false,\n    canShoot: true,\n    dryRun: false,\n    ttslanguage: 'en-US',\n    distractors: [],\n    controls: {},\n    results: [],\n    timer: null,\n\n\n\n    registerSpaceGameEvents: function(){\n\n        document.onkeyup = this.keyup;\n        document.onkeydown = this.keydown;\n        document.onmouseup = this.mouseup;\n        document.onmousedown = this.mousedown;\n        document.onmousemove = this.mousemove;\n        document.ontouchstart = this.touchstart;\n        document.ontouchend = this.touchend;\n        document.addEventListener('touchmove',this.touchmove, {passive: false});\n        window.onresize = this.orientationChange;\n\n        document.addEventListener(\"gesturestart\", this.cancelled, false);\n        document.addEventListener(\"gesturechange\", this.cancelled, false);\n        document.addEventListener(\"gestureend\", this.cancelled, false);\n    }  ,\n\n    /**\n     * Play sound effect.\n     * @param {string} soundName\n     */\n    playSound: function(soundName) {\n        if (document.getElementById(\"mod_minilesson_spacegame_sound_on\").checked) {\n            var soundElement = document.getElementById(\"mod_minilesson_sound_\" + soundName);\n            soundElement.currentTime = 0;\n            soundElement.play();\n        }\n    },\n\n    /**\n     * Adjust for small screens.\n     */\n    smallscreen: function() {\n        app.inFullscreen = false;\n\n        if (document.fullscreenElement) {\n            if (document.exitFullscreen) {\n                let exitPromise = document.exitFullscreen();\n                if (exitPromise instanceof Promise) {\n                    exitPromise.then(() => console.log(\"Document Exited from Full screen mode\"))\n                               .catch((err) => console.error(err));\n                } else {\n                    console.log(\"Document Exited from Full screen mode\");\n                }\n            } else if (document.webkitExitFullscreen) { /* Safari */\n                document.webkitExitFullscreen();\n                console.log(\"Document Exited from Full screen mode (webkit)\");\n            } else if (document.msExitFullscreen) { /* IE11 */\n                document.msExitFullscreen();\n                console.log(\"Document Exited from Full screen mode (ms)\");\n            } else {\n                console.error(\"Fullscreen exit is not supported by this browser\");\n            }\n        } else {\n            console.log(\"Document is not in fullscreen mode\");\n        }\n\n        app.stage.removeAttribute(\"width\");\n        app.stage.removeAttribute(\"height\");\n        app.stage.removeAttribute(\"style\");\n\n        app.stage.classList.remove(\"floating-game-canvas\");\n        $(\"#button_container\").removeClass(\"floating-button-container fixed-bottom\");\n\n        app.displayRect.width = app.stage.clientWidth;\n        app.displayRect.height = app.stage.clientHeight;\n        app.stage.style.width = app.displayRect.width;\n        app.stage.style.height = app.displayRect.height;\n        app.sizeScreen(app.stage);\n    },\n\n    /**\n     * Adjust screen size (switch between modes).\n     */\n    fschange: function() {\n        if (this.inFullscreen) {\n            app.smallscreen();\n        }\n    },\n\n    /**\n     * Expand to full screen.\n     */\n    fullscreen: function() {\n        var landscape = window.matchMedia(\"(orientation: landscape)\").matches;\n        try {\n            if (app.stage.requestFullscreen) {\n                app.stage.requestFullscreen();\n            } else if (app.stage.msRequestFullscreen) {\n                app.stage.msRequestFullscreen();\n            } else if (app.stage.mozRequestFullScreen) {\n                app.stage.mozRequestFullScreen();\n            } else {\n                console.error(\"Fullscreen API is not supported by this browser\");\n            }\n        } catch (e) {\n            log.debug(e, \"Fullscreen error: \");\n        }\n        // The stage.webkitRequestFullscreen() method was removed, due to very easily exiting of full screen in iOS,\n        // along with browser messages asking if you are typing in fullscreen.\n\n        app.inFullscreen = true;\n        var buttonContainer = $(\"#button_container\");\n\n        var width = window.innerWidth;\n\n        // The window.innerHeight returns an offset value on iOS devices in safari only\n        // while in portrait mode for some reason.\n        var height = $(window).height();\n\n        // Switch width and height\n        if (landscape && width < height) {\n            height = [width, width = height][0];\n        }\n\n        // Gets the actual button container height, then adds 16px; 8px on the\n        // top and 8px on the bottom for the page margin.\n        height -= buttonContainer.height() + 16;\n\n        app.displayRect.width = width;\n        app.displayRect.height = height;\n\n        app.stage.style.width = width + \"px\";\n        app.stage.style.height = height + \"px\";\n\n        // Makes the canvas float.\n        app.stage.classList.add(\"floating-game-canvas\");\n\n        // This makes the button container float below the game canvas.\n        buttonContainer.addClass(\"floating-button-container fixed-bottom\");\n\n        $(\"#mod_minilesson_spacegame_fullscreen_button\").blur(); // The button pressed was still focused, so a blur is necessary.\n\n        app.sizeScreen(app.stage);\n    },\n\n    /**\n     * Adjust screen size based on browser window.\n     * @param {object} stage\n     */\n    sizeScreen: function(stage) {\n\n        stage.width = app.displayRect.width;\n        stage.height = app.displayRect.height;\n        app.context.imageSmoothingEnabled = false;\n    },\n\n    /**\n     * Helper function for when the screen size chages due to rotating on mobile.\n     */\n    orientationChange: function() {\n        if (app.inFullscreen) {\n            app.fullscreen();\n        } else {\n            app.smallscreen();\n        }\n    },\n\n    /**\n     * Helper function to clear all events.\n     */\n    clearEvents: function() {\n        document.onkeydown = null;\n        document.onkeyup = null;\n        document.onmousedown = null;\n        document.onmouseup = null;\n        document.onmousemove = null;\n        document.ontouchstart = null;\n        document.ontouchend = null;\n        document.ontouchmove = null;\n        window.onresize = null;\n    },\n\n    storeResult: function(termid, points){\n        var theterm = false;\n        app.terms.forEach(function(aterm){\n            if(aterm.id == termid){\n                theterm = aterm\n            }\n        });\n        //if we found the term, store the result\n        if (theterm) {\n            var result = {\n                question: app.strip_html(theterm['definition']),\n                selected: '',\n                correct: theterm['term'],\n                points: points,\n                id: theterm.id\n            };\n            for (var i = 0; i < app.results.length; i++) {\n                if (app.results[i].id == theterm.id) {\n                    //if we have a duplicate and the earlier one is a fail, but this is a pass, replace it\n                    if (points > 0 && app.results[i].points == 0) {\n                        app.results.splice(i, 1);\n                    //otherwise we just keep the previous result\n                    } else {\n                        return;\n                    }\n                }\n            }\n            //storing result\n            app.results.push(result);\n        }\n    },\n\n    reportSuccess: function(termid) {\n        if (app.dryRun) {\n            return;\n        }\n        //In wordcards we report the success of the association, but not here\n        /*\n        Ajax.call([{\n            methodname: 'mod_minilesson_report_successful_association',\n            args: {\n                termid: termid,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n        */\n    },\n\n    reportFailure: function(term1id, term2id) {\n        if (app.dryRun) {\n            return;\n        }\n        //In wordcards we report the success of the association, but not here\n        /*\n        Ajax.call([{\n            methodname: 'mod_minilesson_report_failed_association',\n            args: {\n                term1id: term1id,\n                term2id: term2id,\n                isfreemode: app.isFreeMode\n            }\n        }]);\n        */\n    },\n\n    /**\n     * Helper function to handle JS Events.\n     */\n    menuEvents: function() {\n        app.clearEvents();\n        document.onkeydown = app.menukeydown;\n        document.onmouseup = app.menumousedown;\n        document.ontouchend = app.menutouchend;\n        window.onresize = app.orientationChange;\n    },\n\n    /**\n     * Helper function to load game objects\n     */\n    loadGame: function() {\n\n        // We already do this elsewhere.\n        app.shuffle(app.questions);\n\n        if (!app.loaded) {\n            app.images.forEach(function (src) {\n                var absolute_src = M.cfg.wwwroot +'/mod/minilesson/' + src;\n\n                var image = new Image();\n                image.src = absolute_src;\n                image.onload = function () {\n                    app.loadedImages[src] = image;\n                    app.imagesLoaded++;\n                    console.log(app.imagesLoaded);\n                    if (app.imagesLoaded >= app.images.length) {\n                        app.gameLoaded();\n                    }\n                };\n            });\n            app.loaded = true;\n        } else {\n            app.startGame();\n        }\n    },\n\n    /**\n     * Helper function process game-over.\n     */\n    endGame: function() {\n\n        // Clear full screen.\n        if (app.inFullscreen) {\n            log.debug(\"quitting full screen\");\n            app.inFullscreen = false;\n            app.smallscreen();\n        }\n\n        clearInterval(app.timer.interval);\n        $(\"#minilesson-gameboard, #minilesson-start-button\").hide();\n        $(\"#minilesson-results\").show();\n\n        // Template data.\n        var tdata = [];\n        tdata['allowretry'] = app.allowretry;\n        tdata['nexturl'] = app.nexturl;\n        tdata['results'] = app.results;\n        tdata['total'] = app.questions.length;\n        var totalcorrect = app.calc_total_points(app.results);\n        //remove any decimal (leave one decimal place)\n        tdata['totalcorrect'] = Math.round(totalcorrect * 10) / 10;\n        tdata['gamescore'] = Math.round(app.score);\n        var total_time = app.timer.count;\n         if (total_time == 0) {\n             tdata['prettytime'] = '00:00';\n         } else {\n             tdata['prettytime'] = app.pretty_print_secs(total_time);\n         }\n\n        templates.render('mod_minilesson/feedback', tdata).then(\n            function(html, js) {\n                $(\"#results-inner\").html(html);\n            }\n        );\n\n        var data = {\n            results: app.results,\n            activity: \"spacegame\"\n        };\n/*\n        if (!app.isFreeMode) {\n            Ajax.call([{\n                methodname: 'mod_minilesson_report_step_grade',\n                args: {\n                    modid: app.modid,\n                    correct: tdata['totalcorrect']\n                }\n            }]);\n        }\n            */\n\n        // ajax.call([{\n        //     methodname: 'mod_wordcards_update_score',\n        //     args: {quizgameid: quizgame, score: Math.trunc(score)},\n        //     fail: notification.exception\n        // }]);\n\n        // We use wordcards end screen so we dont do menuevents.\n        // We just clear events so that the game doesnt restart and kill any ships left on stage\n        //this.menuEvents();\n        this.killAllAlive();\n        this.clearEvents();\n    },\n\n    /**\n     * Helper function process game ready.\n     */\n    gameLoaded: function() {\n\n        clearInterval(app.interval);\n\n        app.interval = setInterval(function () {\n            app.draw(app.context, app.displayRect, app.gameObjects, app.particles, app.question);\n            app.update(app.displayRect, app.gameObjects, app.particles);\n        }, 40);\n\n        app.startGame();\n    },\n\n    /**\n     * Helper function process game start.\n     */\n    startGame: function() {\n\n        app.score = 0;\n        app.gameObjects = [];\n        app.particles = [];\n        app.level = -1;\n        app.enemySpeed = 0.5;\n        app.touchDown = false;\n        app.mouseDown = false;\n        app.results=[];\n\n        // Queue & trigger the game_started event.\n        /*\n                ajax.call([{\n                    methodname: 'mod_wordcards_start_game',\n                    args: {quizgameid: quizgame},\n                    fail: notification.exception\n                }]);\n        */\n        app.player = new Player(\"pix/spacegame/ship-poodll-\" + app.shipsize + \".png\", 0, 0);\n        app.player.x = app.displayRect.width / 2;\n        app.player.y = app.displayRect.height / 2;\n        app.gameObjects.push(app.player);\n\n        app.planet = new Planet(\"pix/spacegame/planet.png\", 0, 0);\n        app.planet.image.width = app.displayRect.width;\n        app.planet.image.height = app.displayRect.height;\n        app.planet.direction.y = 1;\n        app.planet.movespeed.y = 0.7;\n        app.particles.push(app.planet);\n        // Set up the timer.\n        app.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n                $(\"#minilesson-time-counter\").text(app.timer.count);\n            }\n        }\n\n        app.nextLevel();\n\n        app.registerSpaceGameEvents();\n    },\n\n    /**\n     * Helper function process next level (question).\n     */\n    nextLevel: function() {\n        app.level++;\n\n        // If we've run out of questions\n        if (app.level >= app.questions.length) {\n            //kill the player and end the game\n            app.player.die();\n\n            //previously we raised the speed, but we don't want to do that anymore\n            //we might go back on it though.. so its still here\n            /*\n            app.level = 0;\n            app.enemySpeed *= 1.3;\n            app.question = app.runLevel(app.questions, app.level, app.displayRect);\n            */\n\n        } else {\n            app.question = app.runLevel(app.questions, app.level, app.displayRect);\n        }\n    },\n\n    /**\n     * Helper function process current level.\n     * @param {array} questions\n     * @param {object} level\n     * @param {object} bounds\n     * @returns {string}\n     */\n    runLevel: function(questions, level, bounds) {\n        app.currentTeam = [];\n        app.lastShot = 0;\n        app.currentPointsLeft = 0;\n\n        switch(questions[level].type){\n            case 'matching':\n                var i = 0;\n                //so in the case of 3 pairs, we have 6 items, so each item is worth 1/6, one pair will require two shots = 2/6\n                var itempoints = 1 / (questions[level].stems.length * 2);\n                app.currentPointsLeft += 1;\n                questions[level].stems.forEach(function (stem) {\n                    i++;\n                    var question = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.question, itempoints, -i, true,stem.termid);\n                    var answer = new MatchEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        stem.answer, itempoints, i,false,stem.termid);\n                    app.currentTeam.push(question);\n                    app.currentTeam.push(answer);\n                    app.gameObjects.push(question);\n                    app.gameObjects.push(answer);\n                });\n                break;\n\n            case 'multichoice':\n                questions[level].answers.forEach(function(answer) {\n                    var enemy = new MultiEnemy(Math.random() * bounds.width, -Math.random() * bounds.height / 2,\n                        answer.text, answer.itempoints, questions[level].single,  questions[level].termid);\n\n                    if (answer.itempoints < 1) {\n                        app.currentTeam.push(enemy);\n                        if (answer.itempoints > 0) {\n                            app.currentPointsLeft += answer.itempoints;\n                        }\n                    }\n                    app.gameObjects.push(enemy);\n                });\n        }\n        return questions[level].question;\n    },\n\n    /**\n     * Helper function to place text on screen\n     * @param {object} context\n     * @param {object} displayRect\n     * @param {objectc} objects\n     * @param {object} particles\n     * @param {string} question\n     */\n    draw: function(context, displayRect, objects, particles, question) {\n        context.clearRect(0, 0, displayRect.width, displayRect.height);\n        //draw the background\n        app.drawSpaceBackground(context,displayRect);\n\n        //draw particles\n        var i = 0;\n        for (i = 0; i < particles.length; i++) {\n            particles[i].draw(context);\n        }\n\n        //draw objects\n        for (i = 0; i < objects.length; i++) {\n            objects[i].draw(context);\n        }\n\n        if (app.player.alive) {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'left';\n            context.fillText(app.strings.score + ' ' + Math.round(app.score) +  '  ' + app.strings.lives + ' ' +  app.player.lives,\n                5, displayRect.height - 20);\n            context.textAlign = 'center';\n\n            app.wrapText(context, question, false, 20, displayRect.width * 0.9, displayRect.width / 2, 20);\n        } else {\n            context.fillStyle = '#FFFFFF';\n            context.font = \"18px Audiowide\";\n            context.textAlign = 'center';\n            context.fillText(app.strings.endofgame + ' ' + Math.round(app.player.lastScore),\n                displayRect.width / 2, displayRect.height / 2);\n        }\n    },\n\n    /**\n     * Helper function main game logic: process movements and behaviours of game objects\n     * @param {object} bounds\n     * @param {object} objects\n     * @param {object} particles\n     */\n    update: function(bounds, objects, particles) {\n        var i = 0;\n        for (i = 0; i < 3; i++) {\n            particles.push(new Star(bounds));\n        }\n        for (i = 0; i < particles.length; i++) {\n            particles[i].update(bounds);\n            if (!particles[i].alive) {\n                particles.splice(i, 1);\n                i--;\n            }\n        }\n        for (i = 0; i < objects.length; i++) {\n            objects[i].update(bounds);\n            for (var j = i + 1; j < objects.length; j++) {\n                app.collide(objects[i], objects[j]);\n            }\n            if (!objects[i].alive) {\n                objects.splice(i, 1);\n                i--;\n            }\n        }\n    },\n\n    /**\n     * Helper function to remove any stray ships on level advance\n     */\n    killAllAlive: function() {\n        app.currentTeam.forEach(function (enemy) {\n            if (enemy.alive) {\n                // Make the itempoints 0 so it won't count as anything and make a new level.\n                enemy.itempoints = 0;\n                enemy.die();\n            }\n        });\n        app.currentTeam = [];\n    },\n\n    /**\n     * Helper function to handle collisions between gameobjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    collide: function(object1, object2) {\n        return object1.alive && object2.alive && (this.collideOrdered(object1, object2) || this.collideOrdered(object2, object1));\n    },\n\n    /**\n     * Helper funcction to handle collisions.\n     * @param {object} object1\n     * @param {object} object2\n     * @returns {boolean}\n     */\n    collideOrdered: function(object1, object2) {\n        if (object1 instanceof Laser && object2 instanceof Player) {\n            if (!object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                object1.die();\n                return true;\n            }\n        }\n        if (object1 instanceof Laser && object2 instanceof Enemy) {\n            if (object1.friendly && app.objectsIntersect(object1, object2)) {\n                object2.gotShot(object1);\n                return true;\n            }\n        }\n        if (object1 instanceof Player && object2 instanceof Enemy) {\n            if (app.objectsIntersect(object1, object2)) {\n                object1.die();\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Helper function to handle intersections between GameObjects.\n     * @param {object} object1\n     * @param {object} object2\n     * @return {boolean}\n     */\n    objectsIntersect: function(object1, object2) {\n        var rect1 = object1.getRect();\n        var rect2 = object2.getRect();\n        return rect1.Intersect(rect2);\n    },\n\n    /**\n     * Helper function for spraying particle (explosion) effects\n     * @param {int} x\n     * @param {int} y\n     * @param {int} num\n     * @param {string} colour\n     */\n    spray: function(x, y, num, colour) {\n        for (var i = 0; i < num; i++) {\n            app.particles.push(new Particle(x, y, {\n                x: (Math.random() - 0.5) * 16,\n                y: ((Math.random() - 0.5) * 16) + 3\n            }, colour));\n        }\n    },\n\n    /**\n     * Helper function to display answers.\n     * @param {object} context\n     * @param {string} input\n     * @param {bool} wrapUpwards\n     * @param {int} textHeight\n     * @param {int} maxLineWidth\n     * @param {int} x\n     * @param {int} y\n     */\n    wrapText: function(context, input, wrapUpwards, textHeight, maxLineWidth, x, y) {\n        var drawLines = [];\n        var originalY = y;\n        var words = input.split(' ');\n        var line = '';\n        var maxTextWidth = 0;\n        // Loops through the words, and preprocesses each line with the correct string value and y location.\n        words.forEach(function (word) {\n            var tempLine ='';\n            if(line===''){\n                tempLine = line + ' ' + word;\n            }else{\n                tempLine = line + ' ' + word;\n            }\n\n            var metrics = context.measureText(tempLine);\n            var textWidth = metrics.width;\n            maxTextWidth = Math.max(maxTextWidth, textWidth);\n\n            // If the line with the new word is too long, then push the current line without the new word to drawLines.\n            if (textWidth > maxLineWidth) {\n                drawLines.push({\n                    text: line,\n                    y: y += textHeight\n                });\n\n                line = word;\n            } else {\n                // If it's shorter than the limit, just add the word to the line and move on.\n                line = tempLine;\n            }\n        });\n\n        // Push the last line, if it exists.\n        drawLines.push({\n            text: line,\n            y: y += textHeight\n        });\n\n        // The offset the text was created.\n        var yOffset = y - originalY;\n\n        //box mods\n        var boxPadding = 20;\n        var boxmodifier = wrapUpwards ? -(yOffset + textHeight + boxPadding / 2) : -(textHeight + boxPadding / 2);\n\n        var borderColor = wrapUpwards ?'transparent':'white';\n        app.drawRoundRect(context, borderColor,maxTextWidth + boxPadding, textHeight * drawLines.length + boxPadding, x - (maxTextWidth + boxPadding) / 2, y + boxmodifier);\n\n        context.fillStyle=\"white\";\n        drawLines.forEach(function (drawLine) {\n            // If it is suppose to wrap upwards (i.e. for enemy ships) it shifts all questions upwards the amount the\n            // questions go down.\n            var modifier = wrapUpwards ? -yOffset : 0;\n\n            context.fillText(drawLine.text, x, drawLine.y + modifier);\n        });\n    },\n\n    drawRoundRect: function(context, borderColor, width, height , x , y) {\n        var cornerRadius = 4;\n        var borderWidth = 4;\n\n        var fillColor = 'rgba(75, 71, 77, 0.5)';\n        //var borderColor = 'red';\n        if(borderColor !== 'white') {\n                borderColor = fillColor;\n        }\n\n        // Draw the box with border\n        context.fillStyle = fillColor; // Box background color\n        context.fillRect(x,y, width, height); // Draw the box\n        context.strokeStyle = borderColor; // Border color\n        context.lineWidth = borderWidth; // Border width\n        context.strokeRect(x - borderWidth / 2, y - borderWidth  / 2, width + borderWidth, height + borderWidth); // Draw the border\n    },\n\n    drawSpaceBackground: function(context,displayRect) {\n\n        // Set the source of the image (URL of the background image)\n        var img = app.loadedImages['pix/spacegame/space-bckg.png'];\n\n        // Calculate the number of tiles needed to cover the canvas\n        var tilesX = Math.ceil(displayRect.width / img.width);\n        var tilesY = Math.ceil(displayRect.height / img.height);\n\n        // Loop through and draw the image tiles to cover the canvas\n        for (var i = 0; i < tilesX; i++) {\n            for (var j = 0; j < tilesY; j++) {\n                context.drawImage(img, i * img.width, j * img.height, img.width, img.height);\n            }\n        }\n    },\n\n    /**\n     * Helper function for end of level.\n     */\n    shipReachedEnd: function() {\n\n        var amountLeft = app.currentTeam.filter(function (enemy) {\n            return enemy.alive;\n        }).length;\n\n        if (amountLeft === 0\n            // && (app.currentPointsLeft < app.itempoints || app.currentPointsLeft <= 0)\n            && app.player.alive) {\n            app.nextLevel();\n        }\n    },\n\n    /**\n     * Helper function for game menu from keyboard.\n     * @param {object} e\n     */\n    menukeydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32) {\n                app.loadGame();\n            }\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menumousedown: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for game menu on mobile.\n     * @param {object} e\n     */\n    menutouchend: function(e) {\n        if (e.target === app.stage) {\n            app.loadGame();\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keydown: function(e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {\n            e.preventDefault();\n            if (e.keyCode === 32 && app.player.alive && app.canShoot) {\n                app.player.Shoot();\n            } else if (e.keyCode === 37) {\n                app.player.direction.x = -1;\n            } else if (e.keyCode === 38) {\n                app.player.direction.y = -1;\n            } else if (e.keyCode === 39) {\n                app.player.direction.x = 1;\n            } else if (e.keyCode === 40) {\n                app.player.direction.y = 1;\n            }\n        }\n    },\n\n    /**\n     * Helper function for keyboard movement.\n     * @param {object} e\n     */\n    keyup: function(e) {\n        if (e.keyCode === 32) {\n            app.canShoot = true;\n        } else if ([37, 39].indexOf(e.keyCode) !== -1) {\n            app.player.direction.x = 0;\n        } else if ([38, 40].indexOf(e.keyCode) !== -1) {\n            app.player.direction.y = 0;\n        }\n    },\n\n    /**\n     * Helper function for mouse click (starts the player shooting if you clicked on them, moving if you didn't).\n     * @param {object} e\n     */\n    mousedown: function(e) {\n        if (e.target === app.stage) {\n            var playerWasClicked = app.player.getRect().Contains({x: e.offsetX, y: e.offsetY});\n            if (playerWasClicked && app.player.alive) {\n                app.player.Shoot();\n            }\n            if (!app.mouseDown) {\n                app.player.mouse.x = e.offsetX;\n                app.player.mouse.y = e.offsetY;\n                app.mouseDown = true;\n            }\n        }\n    },\n\n    /**\n     * Helper function for mouse release. (stops the Player) for mouse mode\n     */\n    mouseup: function() {\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n        app.mouseDown = false;\n    },\n\n    /**\n     * Helper function for mouse movement.\n     * @param {object} e\n     */\n    mousemove: function(e) {\n        app.player.mouse.x = e.offsetX;\n        app.player.mouse.y = e.offsetY;\n    },\n\n    /**\n     * Helper function for cancelled event.\n     * @param {object} event\n     */\n    cancelled: function(event) {\n        if (event.target === app.stage) {\n            event.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchstart: function(e) {\n        if (e.target === app.stage) {\n            if (app.player.alive && e.touches.length > 1) {\n                app.player.Shoot();\n            } else {\n                app.touchDown = true;\n                app.touchmove(e);\n            }\n\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchend: function(e) {\n        if (e.touches.length === 0) {\n            app.touchDown = false;\n        }\n        app.player.direction.x = 0;\n        app.player.direction.y = 0;\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function for movement on mobile touch devices.\n     * @param {object} e\n     */\n    touchmove: function(e) {\n        var rect = e.target.getBoundingClientRect();\n        // Required for getting the stage's relative touch position, due to a previous significant offset.\n        var x = e.touches[0].pageX - rect.left;\n        var y = e.touches[0].clientY - rect.top;\n\n        window.stage = app.stage;\n        app.player.mouse.x = x;\n        app.player.mouse.y = y - (2 * app.player.image.height);\n\n        if (e.target === app.stage) {\n            e.preventDefault();\n        }\n    },\n\n    /**\n     * Helper function to shuffle levels.\n     * @param {array} array\n     * @return {array}\n     */\n    shuffle: function(array) {\n        var currentIndex = array.length;\n        var temporaryValue;\n        var randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    },\n\n    strip_html: function(htmlstring) {\n        return htmlstring.replace(/<\\/?[^>]+(>|$)/g, \"\");\n    },\n\n    clone: function () {\n        return $.extend(true, {}, this);\n    },\n\n    split_array: function(array, chunkSize) {\n        if(chunkSize == null){ chunkSize = 4};\n        var result = [];\n        var currentIndex = 0;\n\n        while (currentIndex < array.length) {\n            const chunk = array.slice(currentIndex, currentIndex + chunkSize);\n            if (chunk.length < chunkSize) {\n                const remaining = chunkSize - chunk.length;\n                // Reuse elements from previous chunks\n                for (var i = 0; i < remaining; i++) {\n                    chunk.push(array[i]);\n                }\n            }\n            result.push(chunk);\n            currentIndex += chunkSize;\n        }\n\n        return result;\n    },\n\n    shuffle_array: function(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    },\n\n    calc_total_points: function(results) {\n        var total = 0;\n        $.each(results, function(i, o) {\n          if (o.points != undefined) {\n            total += o.points;\n          }\n        });\n        return total;\n      },\n\n      pretty_print_secs: function(time) {\n        var minutes = Math.floor(time / 60);\n        var seconds = time - minutes * 60;\n        return app.str_pad_left(minutes, '0', 2) + ':' + app.str_pad_left(seconds, '0', 2);\n      },\n\n      str_pad_left: function(string, pad, length) {\n        return (new Array(length + 1).join(pad) + string).slice(-length);\n      },\n\n      init_strings: function(){\n       \n        str.get_strings([\n            { \"key\": \"shootthepairs\", \"component\": 'mod_minilesson'},\n            { \"key\": \"emptyquiz\", \"component\": 'mod_minilesson'},\n            { \"key\": \"score\", \"component\": 'mod_minilesson'},\n            { \"key\": \"lives\", \"component\": 'mod_minilesson'},\n            { \"key\": \"spacetostart\", \"component\": 'mod_minilesson'},\n\n        ]).done(function (s) {\n            var i = 0;\n            app.strings.shootthepairs = s[i++];\n            app.strings.emptyquiz = s[i++];\n            app.strings.score = s[i++];\n            app.strings.lives = s[i++];\n            app.strings.spacetostart = s[i++];\n        });\n    },  \n\n    process: function(itemdata) {\n        var terms = itemdata.spacegameitems.map(function(item,index) {\n            var theitem = JSON.parse(item);\n            theitem.id = index;\n            return theitem;\n        });\n        var multichoice_alien_chunksize = itemdata.aliencountmultichoice;\n        var matching_alien_chunksize = itemdata.aliencountmatching;\n        var include_matching_questions = itemdata.includematching;\n        app.terms = terms;\n        app.allowretry = itemdata.allowretry;\n        app.shuffle_array(terms);\n\n        // Multichoice questions.\n        // Split into groups(ie \"levels\") of 5 terms (a single of mc of more than 5 terms is too much).\n        var chunkSize = multichoice_alien_chunksize;\n        if(terms.length) {chunkSize = terms.length;}\n        var mc_levels = app.split_array(terms, chunkSize);\n        // For each level build a set of chunksize questions with 1 correct and chunksize -1  distractors.\n        for (var thelevel = 0; thelevel < mc_levels.length; thelevel++) {\n            var level = mc_levels[thelevel];\n            // Multiple choice questions.\n            for (var i = 0; i < level.length; i++) {\n                var answers = [];\n                for (var j = 0; j < level.length; j++) {\n                    var answertext = app.strip_html(level[j].definition);\n\n                    if(app.sgoptions === app.termAsAlien){\n                        answertext = level[j].term;\n                    }\n                    answers.push({\"text\": answertext,\"itempoints\": (i === j ? 1 : 0)});\n                }\n                var questiontext = level[i].term;\n                if(app.sgoptions === app.termAsAlien){\n                    questiontext = app.strip_html(level[i].definition);\n                }\n                app.questions.push({\n                    \"question\": questiontext,\n                    \"termid\": level[i].id,\n                    \"answers\": answers,\n                    \"type\": \"multichoice\",\n                    \"single\": true\n                });\n            }\n        }\n\n        // Matching questions.\n        if(include_matching_questions == 1){\n            // Split into groups(ie \"levels\") of 3 terms (even 4 terms = 8 items to shoot, its quite hard).\n            chunkSize=matching_alien_chunksize;\n            var matching_levels = app.split_array(terms, chunkSize);\n            for (var thelevel = 0; thelevel < matching_levels.length; thelevel++) {\n                var level = matching_levels[thelevel];\n                var subquestions = [];\n                for (var i = 0; i < level.length; i++) {\n                    subquestions.push({question: level[i].term, answer: app.strip_html(level[i].definition),\"termid\": level[i].id});\n                }\n                // Show a --- in place of a real question, so the user knows its a matching question.\n                app.questions.push({\"question\": app.strings.shootthepairs, \"stems\": subquestions, \"type\": \"matching\"});\n            }\n        }\n        console.log(\"After process:\", app.questions);\n    },\n\n    init_controls: function() {\n        app.controls.gameboard = $(\"#minilesson-gameboard\");\n        app.controls.time_counter = $(\"#minilesson-time-counter\");\n    },\n\n    /**\n     * Helper function to display game start screen\n     */\n    showMenu: function() {\n\n        app.context.clearRect(0, 0, app.displayRect.width, app.displayRect.height);\n\n        app.context.fillStyle = '#FFFFFF';\n        app.context.font = \"18px Audiowide\";\n        app.context.textAlign = 'center';\n\n        log.debug('Display screen: initialising');\n\n        if (app.questions !== null && app.questions.length > 0) {\n            app.context.fillText(app.strings.spacetostart, app.displayRect.width / 2, app.displayRect.height / 2);\n            app.menuEvents();\n        } else {\n            app.context.fillText(app.strings.emptyquiz, app.displayRect.width / 2, app.displayRect.height / 2);\n        }\n        // If we are height 0 then we are in a collapsed state\n        // We call our orientation change function to fix this\n        if(app.stage.height == 0){\n            app.orientationChange();\n        }\n    },\n\n    start: function() {\n        // Hide the intro screen with word cards.\n        app.results = [];\n        app.controls.gameboard.show();\n        app.controls.time_counter.text(\"00:00\");\n\n        app.timer = {\n            interval: setInterval(function() {\n                app.timer.update();\n            }, 1000),\n            count: 0,\n            update: function() {\n                app.timer.count++;\n               // app.controls.time_counter.text('zerozero');\n            }\n        }\n\n        // Begin the game screen.\n        if (document.addEventListener) {\n            document.addEventListener('fullscreenchange', app.fschange, false);\n            document.addEventListener('MSFullscreenChange', app.fschange, false);\n            document.addEventListener('mozfullscreenchange', app.fschange, false);\n            document.addEventListener('webkitfullscreenchange', app.fschange, false);\n        }\n        app.stage = document.getElementById(\"mod_minilesson_spacegame\");\n        app.context = app.stage.getContext(\"2d\");\n        app.smallscreen();\n        app.interval = setInterval(function () {\n            if (app.questions && app.questions.length > 0) {\n                app.showMenu();\n            } else {\n                console.log(\"Questions are not ready or empty.\");\n            }\n        }, 500);\n\n        // Full screen toggle button handler.\n        $('#mod_minilesson_spacegame_fullscreen_button').on('click', function () {\n            if (app.inFullscreen) {\n                app.inFullscreen = false;\n                app.smallscreen();\n            } else {\n                app.fullscreen();\n            }\n        });\n    },\n\n    next_question: function() {\n        var self = this;\n        var stepdata = {};\n        stepdata.index = self.index;\n        stepdata.hasgrade = true;\n        stepdata.totalitems = app.questions.length;\n        var totalcorrect = app.calc_total_points(app.results);\n        //remove any decimal (leave one decimal place)\n        stepdata.correctitems = Math.round(totalcorrect * 10) / 10;\n        stepdata.grade = Math.round(100 * (stepdata.correctitems / stepdata.totalitems));\n        self.quizhelper.do_next(stepdata);\n    },\n\n    register_events: function(index, itemdata, quizhelper) {\n        app.index = index;\n        app.quizhelper = quizhelper;\n        var nextbutton = $(\"#\" + itemdata.uniqueid + \"_container .minilesson_nextbutton\");\n        var clickbutton = $(\"#\" + itemdata.uniqueid + \"_container .ml_sg_clickclick\");\n\n        nextbutton.on('click', function(e) {\n            app.next_question(0);\n        });\n\n        clickbutton.on('click', function(e) {\n            app.start();\n        });\n\n        $('body').on('click', \"#minilesson-try-again\", function() {\n            location.reload();\n        });\n\n        $('body').on('click', \"#minilesson-close-results\", function() {\n            var total_time = app.timer.count;\n            var url = app.nexturl.replace(/&amp;/g, '&') + \"&localscattertime=\" + total_time\n            window.location.replace(url);\n        });\n    },\n\n    /**\n     * Initialization of the game.\n     * @param {array} props\n     */\n    init: function(index, itemdata, quizhelper) {\n        log.debug('MiniLesson Space Game: init function');\n        app.init_strings();\n        app.register_events(index, itemdata, quizhelper);\n        app.init_controls();\n        app.process(itemdata);\n        app.start();\n    },\n}; // End of app declaration.\n\n    return app;\n});"],"names":["define","$","notification","def","log","templates","Ajax","str","debug","Rectangle","constructor","left","top","width","height","right","this","bottom","Contains","point","x","y","Intersect","rectangle","GameObject","src","image","loadImage","velocity","direction","movespeed","alive","decay","app","loadedImages","Image","M","cfg","wwwroot","update","draw","context","drawImage","getRect","die","Player","mouse","lives","lastScore","bounds","mouseDown","touchDown","player","Shoot","playSound","gameObjects","unshift","Laser","canShoot","spray","score","endGame","gotShot","shot","Planet","displayRect","Enemy","text","itempoints","termid","xspeed","enemySpeed","yspeed","Math","random","movementClock","shotFrequency","shotClock","level","floor","laser","friendly","currentPointsLeft","shipReachedEnd","call","fillStyle","font","textAlign","wrapText","reportSuccess","shooter","laserSpeed","deflect","Particle","colour","aliveTime","fillRect","stroke","Star","MultiEnemy","single","shipsize","storeResult","killAllAlive","nextLevel","MatchEnemy","pairid","stem","hightlighted","lastShot","alives","currentTeam","forEach","match","hightlight","unhightlight","isFreeMode","strings","termAsAlien","questions","quizgame","stage","particles","images","imagesLoaded","loaded","planet","question","interval","inFullscreen","dryRun","ttslanguage","distractors","controls","results","timer","registerSpaceGameEvents","document","onkeyup","keyup","onkeydown","keydown","onmouseup","mouseup","onmousedown","mousedown","onmousemove","mousemove","ontouchstart","touchstart","ontouchend","touchend","addEventListener","touchmove","passive","window","onresize","orientationChange","cancelled","soundName","getElementById","checked","soundElement","currentTime","play","smallscreen","fullscreenElement","exitFullscreen","exitPromise","Promise","then","console","catch","err","error","webkitExitFullscreen","msExitFullscreen","removeAttribute","classList","remove","removeClass","clientWidth","clientHeight","style","sizeScreen","fschange","fullscreen","landscape","matchMedia","matches","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","e","buttonContainer","innerWidth","add","addClass","blur","imageSmoothingEnabled","clearEvents","ontouchmove","points","theterm","terms","aterm","id","result","strip_html","selected","correct","i","length","splice","push","reportFailure","term1id","term2id","menuEvents","menukeydown","menumousedown","menutouchend","loadGame","shuffle","startGame","absolute_src","onload","gameLoaded","clearInterval","hide","show","tdata","allowretry","nexturl","totalcorrect","calc_total_points","round","total_time","count","pretty_print_secs","render","html","js","setInterval","runLevel","type","stems","answer","answers","enemy","objects","clearRect","drawSpaceBackground","fillText","endofgame","j","collide","object1","object2","collideOrdered","objectsIntersect","rect1","rect2","num","input","wrapUpwards","textHeight","maxLineWidth","drawLines","originalY","words","split","line","maxTextWidth","word","tempLine","textWidth","measureText","max","yOffset","boxmodifier","boxPadding","borderColor","drawRoundRect","drawLine","modifier","strokeStyle","lineWidth","strokeRect","borderWidth","img","tilesX","ceil","tilesY","filter","indexOf","keyCode","preventDefault","target","offsetX","offsetY","event","touches","rect","getBoundingClientRect","pageX","clientY","array","temporaryValue","randomIndex","currentIndex","htmlstring","replace","clone","extend","split_array","chunkSize","chunk","slice","remaining","shuffle_array","total","each","o","undefined","time","minutes","seconds","str_pad_left","string","pad","Array","join","init_strings","get_strings","done","s","shootthepairs","emptyquiz","spacetostart","process","itemdata","spacegameitems","map","item","index","theitem","JSON","parse","multichoice_alien_chunksize","aliencountmultichoice","matching_alien_chunksize","aliencountmatching","include_matching_questions","includematching","mc_levels","thelevel","answertext","definition","sgoptions","term","questiontext","matching_levels","subquestions","init_controls","gameboard","time_counter","showMenu","start","getContext","on","next_question","stepdata","hasgrade","totalitems","correctitems","grade","quizhelper","do_next","register_events","nextbutton","uniqueid","clickbutton","location","reload","url","init"],"mappings":"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"}